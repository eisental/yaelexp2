{"version":3,"sources":["defs.js","training_experiment/info.js","audio_controller.js","ui.js","randomize.js","training_experiment/lesson_block.js","training_experiment/training_block.js","spreadsheet_io.js","sessions.js","training_experiment/TrainingExperiment.js","serviceWorker.js","index.js"],"names":["LessonType","MUSICAL_PIECES","TONAL_CONTEXT","AUTOMATIC","Chords","Strings","continue_text","success_identification","failure_identification","how_it_sounds","failure_song_has_chord","SheetNames","TRAINING_SESSIONS","TRAINING_DATA","musical_pieces_data","IntroText","className","InfoText","lesson_type","imgSrc","name","audioIdx2File","idx","AudioController","srcs","onDoneLoading","onAudioEnded","this","players","ids2players","players2ids","id","playerIdx","length","console","log","p","Audio","addEventListener","e","audioLoaded","push","loadCount","player","src","audio_id","play","SongHeader","props","songData","alt","randomSequence","items","arr","map","a","Math","random","sort","b","shuffleArray","count","ln","i","repeatArray","lesson_data","musical_pieces","tonal_context","automatic","NameOfChord","chordName","description","SongWithoutChords","LessonPart","part","next","state","trial_idx","done_playing","done_loading","trials_per_part","part_data","sequence","that","audioController","d","setState","nextTrial","screen","nextButton","onClick","disabled","React","Component","InfoBeforeLessonPartC","info","LessonBlock","data","steps","PART_A","PART_B","INFO","PART_C","DONE","nextStep","step","key","ChordSelection","chords","TrainingBlock","gs","read","conn","sheetName","range","fetch","spreadsheet_id","api_key","write","url","write_url","serialize","obj","prefix","str","hasOwnProperty","k","v","encodeURIComponent","join","headers","method","mode","SessionEvent","SESSION_START","SESSION_END","writeSessionEvent","session","event","on_error","request_data","Object","assign","time","Date","toString","then","res","catch","IntroScreen","type","document","getElementById","value","InfoScreen","FinishScreen","doneSaving","TrainingExperiment","INTRO","LESSON","TRAINING","FINISH","isLoading","undefined","number","stepWillChange","stepChanged","sessions","end_time","dataSaveError","sessionEventError","response","sessionDataLoaded","session_data","sessionDataLoadError","start_time","textalign","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79af21c4.chunk.js","sourcesContent":["export const LessonType = {\n  MUSICAL_PIECES: 0,\n  TONAL_CONTEXT: 1,\n  AUTOMATIC: 2,\n};\n\nexport const Chords = {\n  BIG_MAJOR: \"מז'ור גדול\",\n  SMALL_MAJOR: \"מז'ור קטן\",\n  SMALL_MINOR: \"מינור קטן\",\n  HALF_DIM:\"חצי מוקטן\"\n}\n\nexport const StaticImages = {\n  happySmiley: \"/static_images/happySmiley.jpg\",\n  sadSmiley: \"/static_images/sadSmiley.png\",\n}\n\nexport const Strings = {\n  continue_text: \"הבא\",\n  success_identification: \"בחרת באקורד הנכון\",\n  failure_identification: \"בחרת באקורד הלא נכון\",\n  how_it_sounds: \" כך הוא נשמע\",\n  failure_song_has_chord:\"בשיר יש אקורד \",\n};\n\nexport const SheetNames = {\n  TRAINING_SESSIONS: \"TrainingSessions\",\n  TRAINING_DATA: \"TrainingExperiment\",\n}\n\n// For MUSICAL_CONTEXT lessons. A mapping of chord name to the image and song name that goes with it.\nexport let musical_pieces_data = {};\nmusical_pieces_data[Chords.BIG_MAJOR] = {\n  imgSrc: \"/song_images/song1.png\",\n  name: \"Imagine\",\n};\nmusical_pieces_data[Chords.SMALL_MAJOR] = {\n  imgSrc: \"/song_images/song2.png\",\n  name: \"הליכה לקיסריה\"\n};\nmusical_pieces_data[Chords.SMALL_MINOR] = {\n  imgSrc: \"/song_images/song3.png\",\n  name: \"Rocket man\"\n};\nmusical_pieces_data[Chords.HALF_DIM] = {\n  imgSrc: \"/song_images/song4.png\",\n  name: \"ברית עולם\"\n};\n","import React from 'react';\nimport { LessonType } from '../defs.js'\n\nexport function IntroText() {\n  return (\n    <div className = \"IntroText\">\n      <p>\n      לפניכם שיעור של 35 דקות. \n      לא ניתן לצאת במהלכו.\n      העבודה על הניסוי מחייבת חיבור אינטרנטי. עבודה ללא חיבור אינטרנטי תיפסל מהניסוי. \n      כמו כן, אנא הצטיידו באוזניות, לאחר שווידאתם עם הנסיינית (יעל) שהן איכותיות מספיק.\n      </p>\n      <p>\n      עליכם להפעיל את התוכנה פעם אחת בכל יום במשך חמישה ימים. לא תוכלו להפעילה יותר מפעם אחת ביום, אך עליכם לדאוג להפעילה בכל יום, ולסיים בכל הפעלה את ההדגמות והתרגילים (נתוני ההפעלה וההשתתפות יישלחו לנסיינית. התשלום על הניסוי מותנה בהקפדה על התנאים).\n      התחלת התוכנה מותנית בקביעת פגישה עם הנסיינית ליום השביעי. מי שטרם קבע פגישה, לא יכול להתחיל את העבודה בתוכנה.\n      </p>\n      <p>\n      אם ברצונכם להפעיל את התוכנה כעת, הכניסו את מספר תעודת הזהות שלכם ולחצו על המשך.\n      </p>\n    </div>);\n}\n\nexport function InfoText({lesson_type}) {\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    return (\n      <div className=\"InfoText\">\n        <p>בניסוי זה תלמדו לזהות אקורדים מרובעים (בעלי ארבעה צלילים) משמיעה באמצעות קישורם לשירים ישראליים מוכרים.</p>\n        <br/>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות.</p>\n        <br/>\n        <p>מיד תשמעו קטעים קצרים מתוך שירים ישראליים מוכרים. בכל קטע שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס.</p>\n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <br/>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל yaeljm@gmail.com או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <br/>\n        <p>בהצלחה!</p>\n      </div>\n    );\n\n  case LessonType.TONAL_CONTEXT:\n    return (\n      <div className=\"InfoText\">\n        <p>בניסוי זה תלמדו לזהות אקורדים מרובעים (בעלי ארבעה צלילים) משמיעה באמצעות הקשר טונאלי: תחושת המתח או הפתרון הנובעת משמיעת אקורד בתוך משפט מוזיקלי.</p>\n        <br/>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות.</p>\n        <br/>\n        <p>מיד תשמעו צמדי אקורדים. לפני כל צמד אקורדים תשמעו מבוא טונאלי – סולם עולה ויורד. בכל צמד אקורדים שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס.</p>\n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <br/>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל yaeljm@gmail.com או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <br/>\n        <p>בהצלחה!</p>\n      </div>\n    );\n\n  case LessonType.AUTOMATIC:\n    return (\n      <div>\n        <p>בניסוי זה תלמדו לזהות אקורדים מרובעים (בעלי ארבעה צלילים) משמיעה באמצעות זיהוי אוטומטי.</p>\n        <br/>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות.</p>\n        <br/>\n        <p>מיד תישמעו אקורדים. </p>\n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <br/>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל yaeljm@gmail.com או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <br/>\n        <p>בהצלחה!</p>\n      </div>\n    );\n  }\n}\n","let audioIdx2File = (idx) => \"audio/\" + idx + \".mp3\";\n\nexport class AudioController {\n  constructor(srcs, onDoneLoading, onAudioEnded) {\n    this.srcs = srcs;\n    this.players = [];\n    this.ids2players = {};\n    this.players2ids = {};\n    for (const id of this.srcs) {\n      const playerIdx = this.players.length;\n      this.ids2players[id] = playerIdx;\n      this.players2ids[playerIdx] = id;\n      console.log(\"adding:\" + id + \" to player \" + this.players.length);\n      const p = new Audio(audioIdx2File(id));\n      p.addEventListener('canplaythrough', (e => {this.audioLoaded(p)}), false);\n      p.addEventListener('ended', (e => {\n        if (this.onAudioEnded) this.onAudioEnded(id)\n      }), false);\n\n      this.players.push(p);\n    }\n\n    this.loadCount = 0;\n    this.onDoneLoading = onDoneLoading;\n    this.onAudioEnded = onAudioEnded;\n  }\n\n  audioLoaded(player) {\n    console.log(\"loaded audio:\" + player.src);\n    this.loadCount+=1;\n    if (this.loadCount === this.players.length) {\n      if (this.onDoneLoading) this.onDoneLoading();\n    }\n  }\n\n  play(audio_id) {\n    const playerIdx = this.ids2players[audio_id];\n    console.log(\"playing \" + audio_id + \" on player \" + playerIdx);\n    this.players[playerIdx].play();\n  }\n}\n","import React from 'react';\n\nexport const SongHeader = props =>{\n  let { songData } = props;\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-8 offset-sm-2\">\n        <img className=\"songImage\" src={ songData.imgSrc } alt=\"\"/>\n        <div className=\"songTitleWrapper\">\n          <span className=\"songTitle\"> שם השיר: </span> \n          <br />\n          <span className=\"songTitle\"> { songData.name }</span> \n        </div>\n        <div className=\"clearBoth\"></div>\n      </div>\n    </div>\n  );\n};\n","export function repeatArray(arr, count) {     \n  var ln = arr.length;\n  var b = [];\n  for(let i=0; i<count; i++) {      \n    b.push(arr[i%ln]);      \n  }\n      \n  return b;      \n}\n\nexport const shuffleArray = arr => arr\n  .map(a => [Math.random(), a])\n  .sort((a, b) => a[0] - b[0])\n  .map(a => a[1]);\n\nexport const randomSequence = (items, length) => shuffleArray(repeatArray(items, length));\n","import React from 'react';\nimport { musical_pieces_data, LessonType, Strings, Chords } from '../defs.js';\nimport { AudioController } from '../audio_controller.js';\nimport { SongHeader } from '../ui.js';\nimport { randomSequence } from '../randomize.js';\n\n// Recordings used in each lesson type and part. i.e. \n// for part 1 and musical_pieces lesson: lesson_data.musical_pieces[1]\nlet lesson_data = {\n  musical_pieces: [\n    [[1, Chords.BIG_MAJOR], [2, Chords.SMALL_MAJOR], [3, Chords.SMALL_MINOR], [4, Chords.HALF_DIM]],\n    [[5, Chords.BIG_MAJOR], [6, Chords.SMALL_MAJOR], [7, Chords.SMALL_MINOR], [8, Chords.HALF_DIM]],\n    [[9, Chords.BIG_MAJOR], [13, Chords.SMALL_MAJOR], [17, Chords.SMALL_MINOR], [21, Chords.HALF_DIM]],\n  ],\n  tonal_context: [\n    [[25, Chords.BIG_MAJOR], [26, Chords.SMALL_MAJOR], [27, Chords.SMALL_MINOR], [28, Chords.HALF_DIM]],\n    [[29, Chords.BIG_MAJOR], [30, Chords.SMALL_MAJOR], [31, Chords.SMALL_MINOR], [32, Chords.HALF_DIM]],\n    [[33, Chords.BIG_MAJOR], [35, Chords.SMALL_MAJOR], [37, Chords.SMALL_MINOR], [39, Chords.HALF_DIM],\n     [34, Chords.BIG_MAJOR], [36, Chords.SMALL_MAJOR], [38, Chords.SMALL_MINOR], [40, Chords.HALF_DIM]],\n  ],\n  automatic: [\n    [[9, Chords.BIG_MAJOR], [13, Chords.SMALL_MAJOR], [17, Chords.SMALL_MINOR], [21, Chords.HALF_DIM]],\n    [[41, Chords.BIG_MAJOR], [45, Chords.SMALL_MAJOR], [49, Chords.SMALL_MINOR], [53, Chords.HALF_DIM]],\n    [[41, Chords.BIG_MAJOR], [45, Chords.SMALL_MAJOR], [49, Chords.SMALL_MINOR], [53, Chords.HALF_DIM],\n     [9, Chords.BIG_MAJOR], [13, Chords.SMALL_MAJOR], [17, Chords.SMALL_MINOR], [21, Chords.HALF_DIM]],\n  ],\n};\n\n// The UI for AUTOMATIC and TONAL_CONTEXT lesson trials.\nconst NameOfChord = props => {\n  let { chordName, lesson_type } = props;\n  let description = \"\";\n  if (lesson_type === LessonType.TONAL_CONTEXT)\n    description = \"שם האקורד הראשון:\";\n  else if (lesson_type === LessonType.AUTOMATIC)\n    description = \"שם האקורד:\";\n\n  return (\n    <div className = \"row text-center successScreenWrapper\">\n      <div className=\"col-sm-8 offset-sm-2\">\n        <span className=\"chordName\">\n          {description}\n        <br />\n        { chordName }\n        </span>\n      </div>\n    </div>\n  );\n};\n\n// The UI for MUSICAL_PIECES lesson trials.\nconst SongWithoutChords = props => {\n  let { chordName } = props;\n  let { songData } = props;\n  return(\n    <div>\n      <SongHeader songData={ songData } />\n      <div className=\"row\"><div className=\"col-sm-12\">&nbsp;</div></div>\n      <div className=\"row\"><div className=\"col-sm-12\">&nbsp;</div></div>\n      <div className=\"row\">\n        <span className=\"col-sm-4 offset-sm-4\">\n          <span className=\"songTitle fixToRight\">\n          שם האקורד:\n          </span>\n        </span>\n      </div>\n      <div className=\"row text-center\">\n        <div className=\"col-sm-4 offset-sm-4\">\n          <span className=\"songTitle fixToRight\">{ chordName }</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// This component represents one part of the lesson. There are 3 parts. The only difference \n// between them is the audio sequence. Audio playing code is here.\nclass LessonPart extends React.Component {\n  state = {\n    trial_idx: 0,\n    done_playing: false,\n  };\n\n  constructor({part, lesson_type, next}) {\n    super();\n    this.part = part;\n    this.lesson_type = lesson_type;\n    this.next = next;\n    this.state.done_loading = false;\n    this.trials_per_part = 16;\n    \n    switch (lesson_type) {\n    case LessonType.MUSICAL_PIECES:\n      this.part_data = lesson_data.musical_pieces[part];\n      break;\n    case LessonType.TONAL_CONTEXT:\n      this.part_data = lesson_data.tonal_context[part];\n      break;\n    case LessonType.AUTOMATIC:\n      this.part_data = lesson_data.automatic[part];\n      break;\n    };\n\n    this.sequence = randomSequence(this.part_data, this.trials_per_part);\n\n    console.log(\"LESSON PART \" + part + \" sequence:\");\n    console.log(this.sequence);\n\n    const that = this;\n    const doneLoadingAudio = () => {\n      console.log(that.audioController);\n      console.log(that);\n      that.setState({done_loading: true});\n      that.audioController.play(this.sequence[that.state.trial_idx][0]);\n    };\n\n    const donePlaying = () => {\n      that.setState({done_playing: true});\n    };\n\n    this.audioController = new AudioController(this.part_data.map(d => d[0]), doneLoadingAudio, donePlaying);\n  }\n\n  render() {\n    const that = this;\n    const nextTrial = () => {\n      const trial_idx = that.state.trial_idx;\n      if (that.state.trial_idx < that.trials_per_part - 1) {\n        that.setState({trial_idx: trial_idx+1,\n                       done_playing: false});\n        that.audioController.play(this.sequence[trial_idx+1][0]);\n      }\n      else {\n        that.next();\n      }\n    };\n\n    const trialData  = this.sequence[this.state.trial_idx];\n    const chordName = trialData[1];\n    const songData = musical_pieces_data[chordName];\n    console.log(\"rendering part \" + this.part + \" trial \" + this.state.trial_idx);\n    if (this.state.done_loading) {\n      let screen;\n      if (this.lesson_type === LessonType.MUSICAL_PIECES) {\n        screen = <SongWithoutChords chordName={chordName} songData={songData}/>;\n      }\n      else {\n        screen = <NameOfChord chordName={chordName} lesson_type={this.lesson_type}/>;\n      }\n\n      let nextButton = this.state.done_playing ? \n          <button onClick={nextTrial}>{Strings.continue_text}</button> :\n          <button onClick={nextTrial} disabled>{Strings.continue_text}</button>;\n\n      return (\n        <div>\n          {screen}          \n          {nextButton}\n        </div>\n      );\n    }\n    else {\n      return <div>Loading...</div>;\n    }\n  }\n}\n\n// This info screen shows up between the 2nd and 3rd parts of the lesson.\nconst InfoBeforeLessonPartC = props => {\n  let { lesson_type, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    info = <p>בחלק זה תשמעו את האקורדים המלווים את השיר, ועליכם לשיר או לזמזם את המנגינה של השיר הכתוב.</p>;\n    break;\n  case LessonType.TONAL_CONTEXT:\n    info = <p>בחלק זה תשמעו את הסולם העולה והיורד ואחריו אקורד בודד.</p>;\n    break;\n  case LessonType.AUTOMATIC:\n    info = <p>בחלק זה תשמעו אקורדים בודדים משני הסוגים ששמעתם קודם לכן - בפסנתר ובגיטרה.</p>;\n    break;\n  };\n  return (\n    <div className=\"InfoBeforeLessonPartC\">\n      { info }\n      <button onClick={next}>{Strings.continue_text}</button>\n    </div>\n  );\n};\n\n// The main lesson block component.\nexport class LessonBlock extends React.Component {\n  steps = {\n    PART_A: 1,\n    PART_B: 2, \n    INFO: 3,\n    PART_C: 4,\n    DONE: 5,\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n\n    this.setState({\n      step: step + 1\n    });\n    if (step + 1 == this.steps.DONE)\n      this.next();\n  }\n\n  state = {\n    step: 1,\n  };\n  \n  constructor({data, lesson_type, next}) {\n    super();\n    this.data = data;\n    this.lesson_type = lesson_type;\n    this.next = next;\n  }\n  \n  render() {\n    const {step} = this.state;\n    let screen;\n    switch(step) {\n    case this.steps.PART_A:\n      screen = <LessonPart part={0} lesson_type={this.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_B:\n      screen = <LessonPart part={1} lesson_type={this.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.INFO:\n      screen = <InfoBeforeLessonPartC lesson_type={this.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_C:\n      screen = <LessonPart part={2} lesson_type={this.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    }\n\n    return screen;\n  }\n}\n","import React from 'react';\nimport { AudioController } from '../audio_controller.js';\nimport { LessonType, Strings, StaticImages, Chords } from '../defs.js';\nimport { SongHeader } from '../ui.js';\n\nconst SucessIdentification = () => {\n  return (\n    <div className=\"row successScreenWrapper\">\n      <div className=\"col-sm-8 offset-sm-2\">\n        <span className=\"songTitle\"> { Strings.success_identification } &nbsp;</span>\n        <img src= { StaticImages.happySmiley } width=\"150px\" height=\"150px\" alt=\"\"/>\n      </div>\n    </div>\n  );\n};\n\nconst ShowCorrectAnswer = props => {\n  const { correctChord } = props;\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-1\">\n          <span className=\"songTitle\">{ Strings.failure_song_has_chord } </span>\n          <span className=\"songTitle\">{ correctChord }</span>\n        </div>\n      </div>\n      <div className=\"row\">\n      &nbsp;\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-1\">\n          <span className=\"songTitle\">{ Strings.how_it_sounds }</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst FailedIdentification = props => {\n  const { shouldShowCorrect } = props;\n  const { correctChord } = props;\n\n  let appendix = <div></div>;\n  if (shouldShowCorrect === true){\n    appendix = <ShowCorrectAnswer correctChord={ correctChord } />;\n  }\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-2\">\n            <span className=\"songTitle\"> { Strings.failure_identification } &nbsp;</span>\n            <img src= { StaticImages.sadSmiley } width=\"150px\" height=\"150px\" alt=\"\"/>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-1\">\n          <span className=\"songTitle\">{ Strings.how_it_sounds }</span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-1\">\n          <span className=\"songTitle\">......</span>\n        </div>\n      </div>\n      { appendix }\n    </div>\n  );\n};\n\nconst SongWithChords = props => {\n  let { songData } = props;\n  return (\n    <div className=\"songDisplayWrapper\">\n      <SongHeader songData = { songData} />\n      <div className=\"row\"><div className=\"col-sm-12\">&nbsp;</div></div>\n      <div className=\"row\"><div className=\"col-sm-12\">&nbsp;</div></div>\n      <div className=\"row\">\n        <span className=\"col-sm-4 offset-sm-4\">\n          <span className=\"songTitle fixToRight\">\n          שם האקורד:\n          </span>\n        </span>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-2 chords\">\n          <button className=\"chordBtn\">מז'ור גדול</button>\n          <button className=\"chordBtn\">מז'ור קטן</button>\n          <button className=\"chordBtn\">מינור גדול</button>\n          <button className=\"chordBtn\">מינור קטן</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ChordSelection = props => {\n  let { chords } = props;\n  return (\n    <div className=\"songDisplayWrapper\">\n      <div className=\"row\">\n        <div className=\"col-sm-2 offset-sm-1\">\n          <button className=\"chordBtn\">\n            מז'ור גדול\n            <br />\n            Imagine\n          </button>\n        </div>\n        <div className=\"col-sm-5\">\n          &nbsp;\n        </div>\n        <div className=\"col-sm-2\">\n          <button className=\"chordBtn\">\n              מז'ור גדול\n              <br />\n              Imagine\n            </button>\n        </div>\n      </div>\n      <div className=\"row text-center\">\n        <div className=\"col-sm-6 offset-sm-3\">\n          <span className=\"plusSign\">  + </span>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-2 offset-sm-1\">\n          <button className=\"chordBtn\">\n            מז'ור גדול\n            <br />\n            Imagine\n          </button>\n        </div>\n        <div className=\"col-sm-5\">\n          &nbsp;\n        </div>\n        <div className=\"col-sm-2\">\n          <button className=\"chordBtn\">\n              מז'ור גדול\n              <br />\n              Imagine\n            </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport class TrainingBlock extends React.Component {\n  constructor({data, lesson_type, next}) {\n    super();\n    this.data = data;\n    this.lesson_type = lesson_type;\n    this.next = next;\n\n    // TODO: choose button order for the whole thing. read chordNames values and shuffle.\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <ChordSelection />\n        TrainingBlock type={this.lesson_type}\n      </div>\n    );\n  }\n}\n","/* functions for reading and writing to a google spreadsheet.\n   \n */\n\nconst read_url = \"https://sheets.googleapis.com/v4/spreadsheets/\";\n\n// https://stackoverflow.com/questions/1714786/query-string-encoding-of-a-javascript-object\nconst serialize = function(obj, prefix) {\n  var str = [],\n    p;\n  for (p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n        v = obj[p];\n      str.push((v !== null && typeof v === \"object\") ?\n        serialize(v, k) :\n        encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n  return str.join(\"&\");\n}\n\nconst gs = {\n  read: function(conn, sheetName, range) {\n    return fetch(read_url + \n                 conn.spreadsheet_id + \n                 \"/values/\" + \n                 sheetName + \n                 \"!\" + range + \n                 \"?key=\" + conn.api_key);\n  },\n\n  write: function(conn, sheetName, data) {\n    let url = conn.write_url + \"?\" + serialize(data) + \"&sheet_name=\" + sheetName;\n    return fetch(url,\n                 {\n                   headers: {\n                     'Accept': 'application/json',\n                     'Content-Type': 'application/json'\n                   },\n                   method: \"GET\",\n                   mode: 'no-cors',\n                 })    \n  },\n}\n\nexport default gs;\n","import gs from './spreadsheet_io.js';\nimport { SheetNames } from './defs.js';\n\nexport const SessionEvent = {\n  SESSION_START: \"SESSION_START\",\n  SESSION_END: \"SESSION_END\",\n};\n\n// parse session json data from sheets api into an array of session objects.\nexport const parseSessions = (data) => {\n  let sessions = [];\n  data.values.forEach(session_event => {\n    let session = {\n      id: session_event[0],\n      session_number: session_event[1],\n      event: session_event[2],\n      time: session_event[3],\n    };\n    sessions.push(session);\n  });\n  return sessions;\n};\n\nexport const writeSessionEvent = (conn, session, event, on_error) => {\n  let request_data = Object.assign({event: event,\n                                    time: new Date().toString()},\n                                   session);\n  console.log(\"writing session_data\");\n  console.log(request_data);\n  gs.write(conn, SheetNames.TRAINING_SESSIONS, request_data)\n    .then(res => { console.log(res); })\n    .catch(on_error);\n\n};\n\nexport const readSessionData = (conn) => {\n    return gs.read(conn, SheetNames.TRAINING_SESSIONS, \"A2:D10000\")\n    .then(response => response.json())\n    .then(parseSessions);\n\n}\n","import React from 'react';\nimport './TrainingExperiment.css';\nimport { IntroText, InfoText } from './info.js';\nimport { LessonType, Strings, SheetNames } from '../defs.js';\nimport { LessonBlock } from './lesson_block.js';\nimport { TrainingBlock } from './training_block.js';\nimport { SessionEvent, parseSessions, writeSessionEvent, readSessionData } from '../sessions.js';\nimport gs from '../spreadsheet_io.js';\n\n// 1st screen.\nfunction IntroScreen({next, data}) {\n  function handleContinue() {\n    data.id = document.getElementById('id_input').value;\n    next();\n  }\n\n  return (\n    <div className=\"IntroScreen\">\n      <IntroText />\n      <label>\"ת\"ז:</label>\n      <input type=\"text\" id=\"id_input\"/><br/>\n      <button onClick={handleContinue}>{Strings.continue_text}</button>\n    </div>\n  );\n}\n\n// 2nd screen. Different text per lesson type.\nfunction InfoScreen({next, lesson_type}) {\n  return (\n    <div className=\"InfoScreen\">\n      <InfoText lesson_type={lesson_type} />\n      <button onClick={next}>{Strings.continue_text}</button>\n    </div>\n  );\n}\n\nfunction FinishScreen({data, doneSaving}) {\n  return (<div>\n          {doneSaving ? \"Saved data!\" : \"Saving data, please wait...\"}<br/>\n          Session number x / y<br/>\n          data = {data.id}\n          </div>);\n}\n\nclass TrainingExperiment extends React.Component {\n  conn = { // read/write connection details for google spreadsheet.\n    spreadsheet_id: '1D2s3D13ldvchzueCFWTkvH8kzhNBEMZzizPnjGQnhMY',\n    api_key: 'AIzaSyDHFHbGy_GhEt1Q4FW61YYEX2jk3hZcSoQ',\n    write_url: 'https://script.google.com/macros/s/AKfycbxv6Uc9VsHlKI6SMe6YmH-MELryrJYvYg-uQnGFhyMF2X7zyC-O/exec',\n  }\n \n  steps = {\n    INTRO: 1,\n    INFO: 2, \n    LESSON: 3,\n    TRAINING: 4,\n    FINISH: 5\n  }\n\n  state = {\n    step: 1,\n    lesson_type: LessonType.MUSICAL_PIECES,\n    isLoading: true, // true until session data is received.\n    doneSaving: false, // false until the data is saved to the spreadsheet.\n  };\n\n  data = {\n    id: undefined,\n  };\n\n  session = {\n    id: undefined,\n    number: undefined\n  };\n\n  nextStep = () => {\n    const { step } = this.state;\n\n    this.stepWillChange(step);\n    this.setState({\n      step: step + 1\n    });\n    this.stepChanged(step + 1);\n  }\n\n  stepWillChange = (step) => {\n    if (step === this.steps.INTRO) {\n      console.log(\"got some session data:\");\n      console.log(this.state.sessions);\n\n      // TODO: enforce session limit by reading this.state.sessions\n\n      // start session\n      this.session.id = this.data.id;\n      this.session.number = 666;\n      //writeSessionEvent(this.conn, this.session, \n        //                SessionEvent.SESSION_START, this.sessionEventError);\n\n    }\n  } \n\n  stepChanged = (step) => {\n    console.log(\"stepChanged: \" + step);\n\n    if (step === this.steps.FINISH) {\n      // end of session. \n      this.data.end_time = new Date().toString();\n\n      // write data\n      let that = this;\n      console.log(\"Saving data...\");\n      gs.write(this.conn, SheetNames.TRAINING_DATA, this.data)\n        .then(res => { that.setState({doneSaving: true}); })\n        .catch(this.dataSaveError);\n\n      // write session ended event\n      writeSessionEvent(this.conn, this.session, \n                        SessionEvent.SESSION_END, this.sessionEventError);\n      // TODO: need to make sure both writes finished before setting doneSaving: true!\n    }\n  }\n\n  dataSaveError = (response) => {\n    console.log(\"error\" + response);\n  }\n\n  sessionEventError = (response) => {\n    console.log(\"error while writing session event.\");\n  }\n\n  sessionDataLoaded = (session_data) => {\n    console.log(\"got session data\");\n    this.setState({ isLoading: false,\n                    sessions: session_data});\n  }\n\n  sessionDataLoadError = (response) => {\n    // ask to refresh the page, try again... contact info?\n    console.log(\"error: \" + response);\n  }\n\n  componentDidMount() {\n    // read session data\n    /* TODO:\n       read all sessions in the beginning.\n       enforce session limit.\n       find the next session number.\n       put in data.\n     */\n    var that = this;\n    \n    /* readSessionData(this.conn)\n      .then(that.sessionDataLoaded)\n      .catch(that.sessionDataLoadError); // TODO: handle errors!\n    */\n    that.sessionDataLoaded();\n    this.data.start_time = new Date().toString();\n  }\n\n  render() {\n    const {step} = this.state;\n    let screen;\n    switch(step) {\n    case this.steps.INTRO:\n      screen = <IntroScreen data={this.data} next={this.nextStep} />;\n      break;\n    case this.steps.INFO:\n      screen = <InfoScreen next={this.nextStep} lesson_type={this.state.lesson_type} />;\n      break;\n    case this.steps.LESSON:\n      screen = <LessonBlock data={this.data} next={this.nextStep} lesson_type={this.state.lesson_type} />;\n      break;\n    case this.steps.TRAINING:\n      screen = <TrainingBlock data={this.data} next={this.nextStep} lesson_type={this.state.lesson_type} />;\n      break;\n    case this.steps.FINISH:\n      screen = <FinishScreen data={this.data} doneSaving={this.state.doneSaving}/>;\n    }\n\n    if (this.state.isLoading)\n      screen = <div>Loading...</div>;\n\n    return (\n        <div textalign='center' className=\"App\">\n          <div className=\"container\">\n            {screen}\n          </div>\n        </div>\n    );\n  }\n}\n\n\nexport default TrainingExperiment;\n\n/*\n  TODO:\n  - validate id (eventually check against db)\n  - experiment screens\n  - css (bootstrap?)\n  - code to talk with spreadsheet\n  - randomization\n  - session management\n  - write data\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport TrainingExperiment from './training_experiment/TrainingExperiment.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TrainingExperiment />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}