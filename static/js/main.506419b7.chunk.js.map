{"version":3,"sources":["defs.js","ui.js","training_experiment/info.js","audio_controller.js","randomize.js","training_experiment/lesson_block.js","training_experiment/training_block.js","spreadsheet_io.js","sessions.js","training_experiment/TrainingExperiment.js","test_experiment/pretest.js","test_experiment/audio_mapping.js","test_experiment/subtests.js","test_experiment/personal_info.js","test_experiment/TestExperiment.js","serviceWorker.js","index.js"],"names":["LessonType","MUSICAL_PIECES","TONAL_CONTEXT","AUTOMATIC","LessonTypeNumbering","Chords","BIG_MAJOR","SMALL_MAJOR","SMALL_MINOR","HALF_DIM","Timbres","PIANO","GUITAR","SONG","StaticImages","Strings","SheetNames","musical_pieces_data","imgSrc","name","LoadingScreen","className","ErrorScreen","error","InfoScreen","info","next","disabled","Button","label","onClick","classNameStr","type","ContinueButton","ReplayButton","src","ButtonTable","labels","values","highlight","no_interaction","gen_button","btn_idx","e","plusClass","hide_fixation","ComboBox","id","options","defaultValue","hidden","value","map","opt","key","IntroText","InfoText","lesson_type","href","PretestInfo","TrainingInfo","props","is_free","InfoBeforeTrainingPartB","InfoBeforeTrainingPartC","audioIdx2File","idx","AudioController","srcs","onDoneLoading","onAudioEnded","this","players","ids2players","players2ids","playerIdx","length","p","Audio","addEventListener","audioLoaded","push","console","log","loadCount","player","audio_id","play","catch","err","pause","currentTime","repeatArray","arr","count","ln","b","i","shuffleArray","a","Math","random","sort","randomSequence","items","lesson_data","musical_pieces","tonal_context","automatic","LessonScreen","line1","line2","chord","chord_button_labels","show_next","indexOf","button_table","next_trial_button","song_image","song_data","alt","LessonPart","part","session","state","trial_idx","done_playing","done_loading","trials_per_part","part_data","ls_prefix","continued","sequence","ls","get","set","that","audioController","d","setState","React","Component","InfoBeforeLessonPartA","InfoBeforeLessonPartB","InfoBeforeLessonPartC","LessonBlock","data","steps","INFO_A","PART_A","INFO_B","PART_B","INFO_C","PART_C","DONE","step","nextStep","screen","training_data","correction_suffixes","musical_pieces_correction_data","TrainingScreen","lesson_part","answer_received","replay_count","is_playing","replay","desc_line1","desc_line2","replay_button","CorrectFeedbackScreen","width","height","IncorrectFeedbackScreen","appendix","shouldShowCorrect","shouldShowButton","correctChord","text","button","TrainingPart","chord_buttons","is_playing_trial","is_playing_incorrect","is_playing_correct","doneLoadingAudio","response_start","Date","donePlaying","correct","selected_audio_idx","correct_audio_idx","done_playing_correct_feedback","nextTrial","processAnswer","answer","trial_data","chord_name","transposition","td","time","toString","strategy","audio_index","chord_number","chord_type","transposition_play_count","get_transposition_play_count","selected_chord_type","response_time","trials","c_idx","gen_letters_correction_list","add_correct","l","flat","feedback_idxs","concat","trial","slice","filter","t","TrainingBlock","read_url","parse_sheet_list","sheetNames","sheets","forEach","sheet","properties","title","gs","read","conn","sheetName","range","fetch","spreadsheet_id","api_key","write","Array","isArray","url","write_url","headers","method","mode","body","JSON","stringify","list_sheets","then","res","json","SessionEvent","SESSION_START","SESSION_CONTINUED","SESSION_END","parseSessions","sessions","session_event","number","event","writeSessionEvent","on_error","request_data","Object","assign","readLessonType","response","row","parseInt","was_last_session_today","last_session","last_time","setHours","getHours","now","getDate","does_user_sheet_exists","user_id","includes","read_subject_data","parse","write_subject_data","MAX_NUMBER_OF_SESSIONS","IntroScreen","document","getElementById","FinishScreen","done_saving","session_number","remaining","ContinueScreen","AssociationForm","htmlFor","rows","cols","chord_associations","PretestBlock","practice_trials_count","test_trails_count","button_idxs","practice_sequence","test_sequence","target_btn","selection","TrainingExperiment","INTRO","INFO","PRETEST_INFO","PRETEST","LESSON","FREE_TRAINING","FAST_TRAINING","ASSOCIATION_FORM","FINISH","is_loading_session","did_check_user_registered","max_sessions_reached","session_done_for_today","user_unregistered","did_load_registration_list","did_load_lesson_type","undefined","maybe_start_session","previous_sessions","clear","start_new_session","last_session_number","continued_session","continued_data","continued_step","stepChanged","cant_continue_session","alert","subject_data","cant_read_subject_data","continue_session","stepWillChange","sessionEventError","new_step","sheet_exists","sessionDataLoadError","end_time","start_time","dataSaveError","sessionDataLoaded","session_data","pretest_info","getScreenForStep","PretestTrial","button_labels","trial_chord","on_keep_going","keep_going","trials_count","subtest","keepGoing","cont_trial_idx","audio_mapping","test_a_indexing","timbre","test_c_indexing","SubtestInfo","test_num","info_div","TestBlock","test_idx","trial_num","show_info","loading","make_test_sequence","make_subtest_a_seq","test_data","make_subtest_c_seq","timbres","cur_timbre","c","trnsp","trnsps","startTrials","stop","trial_info","cont_sequence","cont_show_info","SubtestsBlock","subtests_count","nextTest","cont_test_order","test_order","cont_test_idx","PersonalInfoScreen","songsQuestionnaire","saveData","age","test","gender","musical_background","residence","education","big_maj_recognition","small_maj_recognition","small_min_recognition","half_dim_recognition","hwcomputer","hwdisplay","hwmouse","hwheadphones","form_data","computer","display","mouse","headphones","imagine_familiarity","imagine_like","caesaria_familiarity","caesaria_like","rocketman_familiarity","rocketman_like","britolam_familiarity","britolam_like","songsForm","numbered_options","keys","style","fontWeight","maxLength","LoginScreen","TestInfo","TestExperiment","sheet_suffix","LOGIN","SUB_TESTS_FREE","SUB_TESTS_FAST","PERSONAL_INFO","altered_step","cont_data","cont_step","test_info","Boolean","window","location","hostname","match","App","exact","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.506419b7.chunk.js","sourcesContent":["export const LessonType = {\n  MUSICAL_PIECES: 0,\n  TONAL_CONTEXT: 1,\n  AUTOMATIC: 2,\n};\n\nexport const LessonTypeNumbering = [2, 3, 1];\n\nexport const Chords = {\n  BIG_MAJOR: \"מז'ור גדול\",\n  SMALL_MAJOR: \"מז'ור קטן\",\n  SMALL_MINOR: \"מינור קטן\",\n  HALF_DIM:\"חצי מוקטן\"\n};\n\nexport const Timbres = {\n  PIANO: 0,\n  GUITAR: 1,\n  SONG: 2,\n};\n\nexport const StaticImages = {\n  happySmiley: \"static_images/happySmiley.jpg\",\n  sadSmiley: \"static_images/sadSmiley.png\",\n};\n\nexport const Strings = {\n  continue_text: \"המשך\",\n  success_identification: \"בחרת באקורד הנכון\",\n  failure_identification: \"בחרת באקורד הלא נכון\",\n  how_it_sounds: \"כך הוא נשמע\",\n};\n\nexport const SheetNames = {\n  TRAINING_SESSIONS: \"TrainingSessions\",\n  LESSON_TYPES: \"LessonTypes\",\n  SUBJECTS_DATA: \"SubjectsData\",\n};\n\n// For MUSICAL_CONTEXT lessons. A mapping of chord name to the image and song name that goes with it.\nexport let musical_pieces_data = {};\nmusical_pieces_data[Chords.BIG_MAJOR] = {\n  imgSrc: \"song_images/song1.png\",\n  name: \"Imagine\",\n};\nmusical_pieces_data[Chords.SMALL_MAJOR] = {\n  imgSrc: \"song_images/song2.png\",\n  name: \"הליכה לקיסריה\"\n};\nmusical_pieces_data[Chords.SMALL_MINOR] = {\n  imgSrc: \"song_images/song3.png\",\n  name: \"Rocket man\"\n};\nmusical_pieces_data[Chords.HALF_DIM] = {\n  imgSrc: \"song_images/song4.png\",\n  name: \"ברית עולם\"\n};\n","import React from 'react';\nimport { Strings } from './defs.js';\n\nexport const LoadingScreen = () => {\n  return <div className=\"containter text-center\"><p className=\"lead\">טוען...</p></div>;\n};\n\nexport const ErrorScreen = ({error}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <p>התרחשה שגיאה:</p>\n          <p className=\"lead center\">{error}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const InfoScreen = ({info, next}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 infotext\">\n          {info}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col text-center\">\n          <br/>\n          <ContinueButton next={next} disabled={false} />\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport const Button = ({label, onClick, disabled, className}) => {\n  const classNameStr = className ? \"btn \" + className : \"btn btn-primary\";\n\n  return disabled ? \n    <button type=\"button\" className={classNameStr} onClick={onClick} disabled>{label}</button> :\n    <button type=\"button\" className={classNameStr} onClick={onClick}>{label}</button>;\n};\n\nexport const ContinueButton = ({next, disabled, className}) => {\n  return <Button label={Strings.continue_text} onClick={next} disabled={disabled} className={className} />;\n};\n\nexport const ReplayButton = ({onClick, disabled}) => {\n  const label = <img src=\"static_images/speaker.png\" />;\n  return <Button label={label} disabled={disabled} onClick={onClick} className=\"btn-basic btn-replay\" />;\n};\n\n/* 4 buttons in a square layout with fixation point in the middle. Each button is assigned a value to be passed to \n   the next function when it's clicked. */\nexport const ButtonTable = ({labels, values, disabled, next, highlight, no_interaction, hide_fixation}) => {\n  const gen_button = (btn_idx) => {\n    const className=\"chordBtn\" + (no_interaction ? \" no_interaction\" : \"\")\n      + (highlight===btn_idx ? \" highlight\" : \"\");\n\n    const onClick = (no_interaction ? null : (e) => next(values[btn_idx]));\n\n    if (disabled) \n      return <button className={className} disabled onClick={onClick}>{labels[btn_idx]}</button>;\n    else \n      return <button className={className} onClick={onClick}>{labels[btn_idx]}</button>;\n  };\n\n  let plusClass = \"plusSign align-middle\" + (hide_fixation ? \" hidden\" : \"\");\n\n  return (\n    <table className=\"chordSelection\">\n      <tbody>\n        <tr>\n          <td>{gen_button(0)}</td>\n          <td></td>\n          <td>{gen_button(1)}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td className={plusClass}>+</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>{gen_button(2)}</td>\n          <td></td>\n          <td>{gen_button(3)}</td>\n        </tr>\n      </tbody>\n    </table>   \n  );\n};\n\nexport const ComboBox = ({id, options}) => {\n  return (\n    <select id={id} name={id} defaultValue=\"-\">\n      <option hidden disabled value=\"-\"></option>\n      {options.map(opt => <option value={opt} key={opt}>{opt}</option>)}\n    </select>\n  );\n};\n","import React from 'react';\nimport { LessonType } from '../defs.js';\nimport { InfoScreen } from '../ui.js';\n\nexport function IntroText() {\n  return (\n    <div className = \"IntroText\">\n      <p>\n      לפניכם שיעור של 35 דקות. \n      </p>\n      <p>\n      לא ניתן לצאת במהלכו, אך אם מתעייפים ניתן לקחת הפסקה של דקה.\n      העבודה על הניסוי מחייבת חיבור אינטרנטי. עבודה ללא חיבור אינטרנטי תיפסל מהניסוי.\n      ללא חיבור אינטרנט רציף ומהירות אינטרנט סבירה, לא ניתן יהיה להשלים את הניסוי.\n      כמו כן, אנא הצטיידו באוזניות, לאחר שווידאתם עם הנסיינית (יעל) שהן איכותיות מספיק.\n      </p>\n      <p>\n      עליכם להפעיל את התוכנה פעם אחת בכל יום במשך חמישה ימים. לא תוכלו להפעילה יותר מפעם אחת ביום, אך עליכם לדאוג להפעילה בכל יום, ולסיים בכל הפעלה את ההדגמות והתרגילים (נתוני ההפעלה וההשתתפות יישלחו לנסיינית. התשלום על הניסוי מותנה בהקפדה על התנאים).\n      </p>\n      <p>\n      את התוכנה יש להפעיל בכל חמשת הפעמים באמצעות אותה חומרה - אותו מחשב, אותו מסך, ואותו עכבר מחשב. במסגרת המבחן ביום השישי תתבקשו לפרט באיזו חומרה השתמשתם, אז אנא הקפידו על כך.\n      התחלת התוכנה מותנית בתיאום מבחן ליום השישי. את המבחן יש לתאם מול הנסיינית, והוא יתבצע באמצעות אותו מחשב, מסך, עכבר, ואוזניות בהם תשתמשו במסגרת התרגולים.\n      </p>\n      <p>\n      אם ברצונכם להפעיל את התוכנה כעת, הכניסו את מספר תעודת הזהות שלכם ולחצו על המשך.\n      </p>\n    </div>);\n}\n\nexport function InfoText({lesson_type}) {\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    return (\n      <div>\n        <p>בניסוי זה תלמדו לזהות אקורדים (מספר צלילים המנוגנים יחד) משמיעה באמצעות קישור לקטעים מוזיקליים.</p>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות וסדרו עוצמה נוחה להאזנה. את עוצמת השמע אין לשנות תוך כדי הפעלת התוכנה.</p>\n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל <a href=\"mailto:yaeljm@gmail.com\">yaeljm@gmail.com</a> או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <p>בהצלחה!</p>\n      </div>\n    );\n\n  case LessonType.TONAL_CONTEXT:\n    return (\n      <div>\n        <p>בניסוי זה תלמדו לזהות אקורדים (מספר צלילים המנוגנים יחד) משמיעה באמצעות הקשר טונאלי: תחושת המתח או הפתרון הנובעת משמיעת אקורד בתוך משפט מוזיקלי.</p>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות וסדרו עוצמה נוחה להאזנה. את עוצמת השמע אין לשנות תוך כדי הפעלת התוכנה.</p>        \n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל <a href=\"mailto:yaeljm@gmail.com\">yaeljm@gmail.com</a> או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <p>בהצלחה!</p>\n      </div>\n    );\n\n  case LessonType.AUTOMATIC:\n    return (\n      <div>\n        <p>בניסוי זה תלמדו לזהות אקורדים (מספר צלילים המנוגנים יחד) משמיעה באמצעות היכרות עם אופי האקורד - שינון של סאונד. אם תרצו (לא חובה) באפשרותכם למצוא אסוציאציות לזיהוי האקורדים השונים. אסוציאציה יכולה להיות כל דבר שהאקורד מזכיר לכם או מעורר בכם: צבע או גוון, בהיר או כהה, כלי נגינה, תקופה, רגש (שמח, עצוב, וכו'). השתמשו באסוציאציות רק אם הן ברורות לכם/ן.</p>\n        <p>לתוכנה שני חלקים – חלק השיעור וחלק התרגול. בחלק התרגול עליכם להקיש על האקורד המזוהה באמצעות עכבר המחשב.</p>\n        <p>אנא חברו אוזניות וסדרו עוצמה נוחה להאזנה. את עוצמת השמע אין לשנות תוך כדי הפעלת התוכנה.</p>\n        <p>אנא קראו את הכיתוב המופיע על המסך לאורך כל השיעור.</p>\n        <p>לכל שאלה או בעיה, אנא שלחו הודעה כתובה למייל <a href=\"mailto:yaeljm@gmail.com\">yaeljm@gmail.com</a> או למספר הטלפון 0528931467, ותקבלו מענה בזריזות האפשרית.</p>\n        <p>בהצלחה!</p>\n      </div>\n    );\n  }\n}\n\nexport const PretestInfo = () => {\n  return (\n    <div>\n      <p>מיד יעלו על המסך 4 מלבנים. בכל פעם יסומן מלבן אחר על ידי עיגול שחור במרכזו.</p>\n      <p>עליכם ללחוץ במהירות האפשרית על המלבן המסומן עם עיגול.</p>\n      <p>חלק זה בודק את מהירות התגובה שלכם.</p>\n    </div>\n  );\n};\n\nexport const TrainingInfo = props => {\n  let { lesson_type, is_free, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו את השירים אותם שמעתם בחלקים הקודמים, ותצטרכו לזהות את האקורד הראשון שלהם.\n            בדומה לחלק הקודם, האקורד יושמע גם אחרי הקטע המוזיקלי.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול. \n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו את השירים אותם שמעתם בחלקים הקודמים ותצטרכו לזהות את האקורד הראשון שלהם.\n            האקורד יושמע גם אחרי הקטע המוזיקלי.\n          </p>\n          <p>\n            ההבדל העיקרי הוא שבחלקים הבאים לא תוכלו לשמוע את האקורד יותר מפעם אחת,\n            ועליכם לזהות את סוג האקורד במהירות האפשרית, וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, \n            גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  case LessonType.TONAL_CONTEXT:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו צמד אקורדים לאחר סולם עולה ויורד, ותצטרכו לזהות את האקורד הראשון בכל צמד.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול.\n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו,\n            גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו את הסולם העולה והיורד ואחריו צמד אקורדים, ותצטרכו לזהות את האקורד הראשון ביניהם.\n          </p>\n          <p>\n            ההבדל העיקרי הוא שבחלקים הבאים לא תוכלו לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג\n            האקורד במהירות האפשרית, וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג\n            האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n\n      );\n    }\n    break;\n  case LessonType.AUTOMATIC:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            אם תרצו (לא חובה) באפשרותכם למצוא אסוציאציות לזיהוי האקורדים השונים. אסוציאציה יכולה להיות כל דבר שהאקורד\n            מזכיר לכם או מעורר בכם: צבע או גוון, בהיר או כהה, כלי נגינה, תקופה, רגש (שמח, עצוב, וכו'). \n            השתמשו באסוציאציות רק אם הן ברורות לכם/ן.           \n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את האקורד שוב, על ידי לחיצה על סמן הרמקול. לאחר זיהוי האוקרד, לחצו על סוג האקורד\n            באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו,\n            גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            ההבדל העיקרי הוא שבחלקים הבאים לא תוכלו לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות\n            האפשרית, וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  }\n  return <InfoScreen next={next} info={info}/>;\n};\n\nexport const InfoBeforeTrainingPartB = props => {\n  let { lesson_type, is_free, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו קטעים זהים, אך הפעם בביצוע של חליל ופסנתר, ותצטרכו לזהות את האקורד המושמע בליווי.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול. \n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו קטעים זהים, אך הפעם בביצוע של חליל ופסנתר, ותצטרכו לזהות את האקורד המושמע בליווי.\n          </p>\n          <p>\n            לא ניתן לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות האפשרית, וללחוץ עליו\n            באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  case LessonType.TONAL_CONTEXT:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו סולם עולה ויורד ואחריו אקורד בודד, ותצטרכו לזהות את האקורד.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול.\n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו סולם עולה ויורד ואחריו אקורד בודד, ותצטרכו לזהות את האקורד.\n          </p>\n          <p>\n            לא ניתן לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות האפשרית,\n            וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  case LessonType.AUTOMATIC:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את האקורד שוב, על ידי לחיצה על סמן הרמקול. לאחר זיהוי האקורד, לחצו על סוג האקורד\n            באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            לא ניתן לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות האפשרית,\n            וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  }\n  return <InfoScreen info={info} next={next}/>;\n};\n\nexport const InfoBeforeTrainingPartC = props => {\n  let { lesson_type, is_free, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    if (is_free) {\n      info = (\n        <div>\n          <p>בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n            עליכם לשיר או לזמזם את השיר על האקורד, בכדי לנסות לזהות את סוג האקורד המתאים לשיר.</p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול. \n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n            עליכם לשיר או לזמזם את השיר על האקורד, בכדי לנסות לזהות את סוג האקורד המתאים לשיר.\n          </p>\n        </div>\n      );\n    }\n    break;\n  case LessonType.TONAL_CONTEXT:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול.\n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            לא ניתן לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות האפשרית,\n            וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  case LessonType.AUTOMATIC:\n    if (is_free) {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים, ללא הקטע המוזיקלי, ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            בחלק זה באפשרותכם לשמוע את הקטע המוזיקלי שוב, על ידי לחיצה על סמן הרמקול.\n            לאחר זיהוי האקורד, לחצו על סוג האקורד באמצעות העכבר.\n          </p>\n          <p>\n            שימו לב: רצוי ללחוץ על סוג האקורד ברגע הראשון בו זיהיתם אותו, אבל הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם. אנא כוונו את העכבר למרכז המסך (סמן הרמקול) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    else {\n      info = (\n        <div>\n          <p>\n            בחלק זה תשמעו אקורדים בודדים ותצטרכו לזהות אותם במהירות האפשרית, וללחוץ על סוג האקורד.\n          </p>\n          <p>\n            לא ניתן לשמוע את האקורד יותר מפעם אחת, ועליכם לזהות את סוג האקורד במהירות האפשרית,\n            וללחוץ עליו באמצעות העכבר. הקטע יושמע עד סופו, גם אם תלחצו על סוג האקורד מוקדם.\n            אנא כוונו את העכבר למרכז המסך (סימן הפלוס) לפני כל תרגיל.\n          </p>\n        </div>\n      );\n    }\n    break;\n  }\n  return <InfoScreen info={info} next={next}/>;\n};\n","let audioIdx2File = (idx) => \"audio/\" + idx + \".mp3\";\n\nexport class AudioController {\n  constructor(srcs, onDoneLoading, onAudioEnded) {\n    this.players = [];\n    this.ids2players = {};\n    this.players2ids = {};\n    for (const id of srcs) {\n      const playerIdx = this.players.length;\n\n      if (id in this.ids2players) {\n        continue;\n      }\n\n      this.ids2players[id] = playerIdx;\n      this.players2ids[playerIdx] = id;\n\n      const p = new Audio(audioIdx2File(id));\n      p.addEventListener('canplaythrough', (e => {this.audioLoaded(p)}), false);\n      p.addEventListener('ended', (e => {\n        if (this.onAudioEnded) this.onAudioEnded(id)\n      }), false);\n\n      this.players.push(p);\n    }\n\n    console.log(\"Loading \" + this.players.length + \" audio files\");\n    this.loadCount = 0;\n    this.onDoneLoading = onDoneLoading;\n    this.onAudioEnded = onAudioEnded;\n  }\n\n  audioLoaded(player) {\n    this.loadCount+=1;\n    if (this.loadCount === this.players.length) {\n      if (this.onDoneLoading) this.onDoneLoading();\n    }\n  }\n\n  play(audio_id) {\n    const playerIdx = this.ids2players[audio_id];\n    this.players[playerIdx].play()\n      .catch(err => {\n        console.log(\"Error while playing audio file.\");\n      });\n  }\n\n  stop(audio_id) {\n    const playerIdx = this.ids2players[audio_id];\n    this.players[playerIdx].pause();\n    this.players[playerIdx].currentTime = 0;\n  }\n}\n","export const repeatArray = (arr, count) => {\n  const ln = arr.length;\n  let b = [];\n\n  for (let i=0; i<count; i++) {      \n    b.push(arr[i%ln]);      \n  }\n      \n  return b;      \n};\n\n/* random int between min and max inclusive. */\nexport const randomInt = (min, max) => \n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const randomElement = arr => arr[randomInt(0, arr.length-1)];\n\nexport const shuffleArray = arr => arr\n  .map(a => [Math.random(), a])\n  .sort((a, b) => a[0] - b[0])\n  .map(a => a[1]);\n\nexport const randomSequence = (items, length) => shuffleArray(repeatArray(items, length));\n\nexport const pick_unique_two = arr => {\n  const fst_idx = randomInt(0, arr.length-1);\n  const fst = arr[fst_idx];\n  const snd = randomElement(arr.slice(0, fst_idx).concat(arr.slice(fst_idx+1, arr.length)));\n  return [fst, snd];\n};\n","import React from 'react';\nimport { musical_pieces_data, LessonType, Chords } from '../defs.js';\nimport { AudioController } from '../audio_controller.js';\nimport { ButtonTable, InfoScreen, LoadingScreen, ContinueButton } from '../ui.js';\nimport { randomSequence } from '../randomize.js';\nimport ls from 'local-storage';\n\n// Recordings used in each lesson type and part. i.e. \n// for part 1 and musical_pieces lesson: lesson_data.musical_pieces[1]\nlet lesson_data = {\n  musical_pieces: [\n    [[1, Chords.BIG_MAJOR], [2, Chords.SMALL_MAJOR], [3, Chords.SMALL_MINOR], [4, Chords.HALF_DIM]],\n    [[5, Chords.BIG_MAJOR], [6, Chords.SMALL_MAJOR], [7, Chords.SMALL_MINOR], [8, Chords.HALF_DIM]],\n    [[1021, Chords.BIG_MAJOR], [1025, Chords.SMALL_MAJOR], [1029, Chords.SMALL_MINOR], [1033, Chords.HALF_DIM]],\n  ],\n  tonal_context: [\n    [[37, Chords.BIG_MAJOR], [38, Chords.SMALL_MAJOR], [39, Chords.SMALL_MINOR], [40, Chords.HALF_DIM]],\n    [[37, Chords.BIG_MAJOR], [38, Chords.SMALL_MAJOR], [39, Chords.SMALL_MINOR], [40, Chords.HALF_DIM]],\n    [[41, Chords.BIG_MAJOR], [42, Chords.SMALL_MAJOR], [43, Chords.SMALL_MINOR], [44, Chords.HALF_DIM],],\n  ],\n  automatic: [\n    [[21, Chords.BIG_MAJOR], [25, Chords.SMALL_MAJOR], [29, Chords.SMALL_MINOR], [33, Chords.HALF_DIM]],\n    [[21, Chords.BIG_MAJOR], [25, Chords.SMALL_MAJOR], [29, Chords.SMALL_MINOR], [33, Chords.HALF_DIM]],\n    [[21, Chords.BIG_MAJOR], [25, Chords.SMALL_MAJOR], [29, Chords.SMALL_MINOR], [33, Chords.HALF_DIM]]\n  ],\n};\n\n// Component for the lesson UI.\nconst LessonScreen = ({chord, lesson_type, chord_button_labels, next, show_next}) => {\n  const highlight = chord_button_labels.indexOf(chord);\n  const button_table = <ButtonTable labels={chord_button_labels} values={chord_button_labels} highlight={highlight} no_interaction />;\n\n  let next_trial_button = null;\n  if (show_next) {\n    next_trial_button = (\n      <div className=\"center-lesson-btn\">\n        <ContinueButton next={next} className=\"btn-secondary\" />\n      </div>\n    );\n  }\n\n  let line1, line2;\n  let song_image = null;\n\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    const song_data = musical_pieces_data[chord];\n    line1 = \"שם השיר:\";\n    line2 = song_data.name;\n    song_image = <img className=\"center-chord-image\" src={song_data.imgSrc} alt=\"\"/>;\n    break;\n  case LessonType.TONAL_CONTEXT:\n    line1 = \"שם האקורד הראשון:\";\n    line2 = chord;\n    break;\n  case LessonType.AUTOMATIC:\n    line1 = \"שם האקורד:\";\n    line2 = chord;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 center-block text-center\">\n          <p className=\"chordName\">{line1}</p>\n          <p className=\"chordName\">{line2}</p>\n        </div>\n\n      </div>\n      <div className=\"row lesson-button-table\">\n        {button_table}\n        {next_trial_button}\n      </div>\n      <div className=\"row text-center\">\n        {song_image}\n      </div>\n    </div>\n  );\n};\n\n// This component represents one part of the lesson. There are 3 parts. The only difference \n// between them is the audio sequence. Audio playing code is here.\nclass LessonPart extends React.Component {\n  state = {\n    trial_idx: 0,\n    done_playing: false,\n    done_loading: false,\n  }\n\n  constructor({part, session, next}) {\n    super();\n    this.part = part;\n    this.next = next;\n    this.state.done_loading = false;\n    this.trials_per_part = 16;\n    this.session = session;\n\n    switch (this.session.lesson_type) {\n    case LessonType.MUSICAL_PIECES:\n      this.part_data = lesson_data.musical_pieces[part];\n      break;\n    case LessonType.TONAL_CONTEXT:\n      this.part_data = lesson_data.tonal_context[part];\n      break;\n    case LessonType.AUTOMATIC:\n      this.part_data = lesson_data.automatic[part];\n      break;\n    };\n\n    this.ls_prefix = \"lesson_part\" + part + \"_\";\n    if (session.continued) {\n      this.sequence = ls.get(this.ls_prefix + \"sequence\");\n      const trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n      if (trial_idx !== null) this.state.trial_idx = trial_idx;\n      session.continued = false;\n    }\n    else {\n      this.sequence = randomSequence(this.part_data, this.trials_per_part);\n      ls.set(this.ls_prefix + \"sequence\", this.sequence);\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx);\n    }\n\n    const that = this;\n    const doneLoadingAudio = () => {\n      that.setState({done_loading: true});\n      that.audioController.play(this.sequence[that.state.trial_idx][0]);\n    };\n\n    const donePlaying = () => {\n      that.setState({done_playing: true});\n    };\n\n    this.audioController = new AudioController(this.part_data.map(d => d[0]), doneLoadingAudio, donePlaying);\n  }\n\n  render() {\n    const that = this;\n    const nextTrial = () => {\n      const trial_idx = that.state.trial_idx;\n      if (trial_idx < that.trials_per_part - 1) {\n        that.setState({trial_idx: trial_idx+1,\n                       done_playing: false});\n        that.audioController.play(this.sequence[trial_idx+1][0]);\n        ls.set(this.ls_prefix + \"trial_idx\", trial_idx + 1);\n      }\n      else {\n        that.next();\n      }\n    };\n\n    const trialData  = this.sequence[this.state.trial_idx];\n    const chord = trialData[1];\n\n    if (this.state.done_loading) {\n      const { lesson_type, chord_button_labels } = this.session;\n      return <LessonScreen chord={chord} lesson_type={lesson_type} chord_button_labels={chord_button_labels} next={nextTrial} show_next={this.state.done_playing}/>;\n    }\n    else {\n      return <LoadingScreen />;\n    }\n  }\n}\n\nconst InfoBeforeLessonPartA = props => {\n  let { lesson_type, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    info = \n      <div>\n        <p>מיד תשמעו קטעים קצרים מתוך שירים מוכרים. בכל קטע שתשמעו, יושמעו אקורדים (מספר צלילים המנוגנים יחד) המלווים את השירה. האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס. אקורד זה יושמע בשנית לאחר הקטע.</p>\n        <p>שימו לב כי הקטעים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.</p>\n      </div>;\n    break;\n  case LessonType.TONAL_CONTEXT:\n    info = \n      <div>\n        <p>מיד תשמעו צמדי אקורדים. לפני כל צמד אקורדים תשמעו סולם עולה ויורד (צלילים שמנוגנים בזה אחר זה, בניגוד לאקורדים עצמם, שבהם הצלילים מנוגנים יחד). לאחר מכן, בכל צמד אקורדים שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס.</p>\n        <p>שימו לב כי הקטעים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.</p>\n      </div>;\n    break;\n  case LessonType.AUTOMATIC:\n    info = \n      <div>\n        <p>מיד תישמעו אקורדים. </p>\n        <p>שימו לב כי האקורדים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.</p>\n      </div>;\n    break;\n  };\n\n  return <InfoScreen info={info} next={next}/>;\n};\n\nconst InfoBeforeLessonPartB = props => {\n  let { lesson_type, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    info = \n      <p>\n      מיד תשמעו קטעים זהים לקטעים ששמעתם, אך הפעם בביצוע של חליל ופסנתר. \n      בכל קטע שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס.\n      שימו לב כי הקטעים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.\n      </p>;\n    break;\n  case LessonType.TONAL_CONTEXT:\n    info =\n      <p>\n      מיד תשמעו אקורדים זהים לאקורדים ששמעתם בחלק הקודם. \n      בכל קטע שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס.\n      שימו לב כי הקטעים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.\n      </p>;\n    break;\n  case LessonType.AUTOMATIC:\n    info = \n      <p>\n      מיד תשמעו אקורדים זהים לאקורדים ששמעתם בחלק הקודם.\n      שימו לב כי האקורדים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.\n      </p>;\n    break;\n  };\n\n  return <InfoScreen info={info} next={next}/>;\n};\n\nconst InfoBeforeLessonPartC = props => {\n  let { lesson_type, next } = props;\n  let info;\n  switch (lesson_type) {\n  case LessonType.MUSICAL_PIECES:\n    info = <p>בחלק זה תשמעו את האקורדים המלווים את השיר בלבד, ללא המנגינה, ועליכם לשיר או לזמזם את המנגינה של השיר ששמו מופיע.</p>;\n    break;\n  case LessonType.TONAL_CONTEXT:\n    info = <p>בחלק זה תשמעו את הסולם העולה והיורד ואחריו אקורד בודד.</p>;\n    break;\n  case LessonType.AUTOMATIC:\n    info = \n      <p>\n      בחלק זה תשמעו אקורדים זהים לאקורדים ששמעתם בחלק הקודם.\n      שימו לב כי האקורדים חוזרים על עצמם מספר רב של פעמים, בכדי לאפשר לכם למידה מעמיקה. נסו להאזין היטב בכל אחת מן ההשמעות.\n      </p>;\n    break;\n  };\n\n  return <InfoScreen info={info} next={next}/>;\n};\n\n// The main lesson block component. Responsible mostly for the lesson sequence.\nexport class LessonBlock extends React.Component {\n  steps = {\n    INFO_A: 1,\n    PART_A: 2,\n    INFO_B: 3,\n    PART_B: 4, \n    INFO_C: 5,\n    PART_C: 6,\n    DONE: 7,\n  }\n\n  state = {\n    step: 1,\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n\n    this.setState({\n      step: step + 1\n    });\n    ls.set(\"lesson_block_step\", step + 1);\n\n    if (step + 1 === this.steps.DONE)\n      this.next();\n  }\n\n  state = {\n    step: 1,\n  };\n  \n  constructor({data, session, next}) {\n    super();\n    this.data = data;\n    this.session = session;\n    this.next = next;\n\n    if (session.continued) {\n      this.state.step = ls.get(\"lesson_block_step\", this.state.step);\n    }\n    else {\n      ls.set(\"lesson_block_step\", this.state.step);\n    }\n  }\n  \n  render() {\n    const {step} = this.state;\n    let screen;\n\n    switch(step) {\n    case this.steps.INFO_A:\n      this.session.continued = false;\n      screen = <InfoBeforeLessonPartA lesson_type={this.session.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_A:\n      screen = <LessonPart part={0} session={this.session} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.INFO_B:\n      this.session.continued = false;\n      screen = <InfoBeforeLessonPartB lesson_type={this.session.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_B:\n      screen = <LessonPart part={1} session={this.session} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.INFO_C:\n      this.session.continued = false;\n      screen = <InfoBeforeLessonPartC lesson_type={this.session.lesson_type} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_C:\n      screen = <LessonPart part={2} session={this.session} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.DONE:\n      this.nextStep();\n    }\n\n    return screen;\n  }\n}\n","import React from 'react';\nimport { AudioController } from '../audio_controller.js';\nimport { LessonType, LessonTypeNumbering, Strings, StaticImages, Chords, musical_pieces_data } from '../defs.js';\nimport { ReplayButton, LoadingScreen, ContinueButton, ButtonTable } from '../ui.js';\nimport { randomSequence } from '../randomize.js';\nimport { TrainingInfo, InfoBeforeTrainingPartB, InfoBeforeTrainingPartC } from './info.js';\nimport ls from 'local-storage';\n\n// each trial entry is [audio_idx, chord, transposition]\nconst training_data = {\n  musical_pieces: [\n    [[1, Chords.BIG_MAJOR, 0], [2, Chords.SMALL_MAJOR, 0], // part 1\n     [3, Chords.SMALL_MINOR, 0], [4, Chords.HALF_DIM, 0]],\n\n    [[5, Chords.BIG_MAJOR, 0], [6, Chords.SMALL_MAJOR, 0], // part 2\n     [7, Chords.SMALL_MINOR, 0], [8, Chords.HALF_DIM, 0],\n     [9, Chords.BIG_MAJOR, 1], [12, Chords.SMALL_MAJOR, 1], \n     [15, Chords.SMALL_MINOR, 1], [18, Chords.HALF_DIM, 1],\n     [10, Chords.BIG_MAJOR, 2], [13, Chords.SMALL_MAJOR, 2], \n     [16, Chords.SMALL_MINOR, 2], [19, Chords.HALF_DIM, 2],\n     [11, Chords.BIG_MAJOR, 3], [14, Chords.SMALL_MAJOR, 3], \n     [17, Chords.SMALL_MINOR, 3], [20, Chords.HALF_DIM, 3]],\n\n    [[1021, Chords.BIG_MAJOR, 0], [1022, Chords.BIG_MAJOR, 1], // part 3\n     [1023, Chords.BIG_MAJOR, 2], [1024, Chords.BIG_MAJOR, 3],\n     [1025, Chords.SMALL_MAJOR, 0], [1026, Chords.SMALL_MAJOR, 1],\n     [1027, Chords.SMALL_MAJOR, 2], [1028, Chords.SMALL_MAJOR, 3],\n     [1029, Chords.SMALL_MINOR, 0], [1030, Chords.SMALL_MINOR, 1], \n     [1031, Chords.SMALL_MINOR, 2], [1032, Chords.SMALL_MINOR, 3],\n     [1033, Chords.HALF_DIM, 0], [1034, Chords.HALF_DIM, 1], \n     [1035, Chords.HALF_DIM, 2], [1036, Chords.HALF_DIM, 3]],\n  ],\n  tonal_context: [\n    [[37, Chords.BIG_MAJOR, 0], [38, Chords.SMALL_MAJOR, 0], // part 1\n     [39, Chords.SMALL_MINOR, 0], [40, Chords.HALF_DIM, 0]],\n\n    [[41, Chords.BIG_MAJOR, 0], [42, Chords.SMALL_MAJOR, 0], // part 2\n     [43, Chords.SMALL_MINOR, 0], [44, Chords.HALF_DIM, 0],\n     [45, Chords.BIG_MAJOR, 1], [48, Chords.SMALL_MAJOR, 1],\n     [51, Chords.SMALL_MINOR, 1], [54, Chords.HALF_DIM, 1],\n     [46, Chords.BIG_MAJOR, 2], [49, Chords.SMALL_MAJOR, 2],\n     [52, Chords.SMALL_MINOR, 2], [55, Chords.HALF_DIM, 2],\n     [47, Chords.BIG_MAJOR, 3], [50, Chords.SMALL_MAJOR, 3],\n     [53, Chords.SMALL_MINOR, 3], [56, Chords.HALF_DIM, 3]],\n    \n    [[21, Chords.BIG_MAJOR, 0], [22, Chords.BIG_MAJOR, 1],  // part 3\n      [23, Chords.BIG_MAJOR, 2], [24, Chords.BIG_MAJOR, 3],\n      [25, Chords.SMALL_MAJOR, 0], [26, Chords.SMALL_MAJOR, 1],\n      [27, Chords.SMALL_MAJOR, 2], [28, Chords.SMALL_MAJOR, 3],\n      [29, Chords.SMALL_MINOR, 0], [30, Chords.SMALL_MINOR, 1], \n      [31, Chords.SMALL_MINOR, 2], [32, Chords.SMALL_MINOR, 3],\n      [33, Chords.HALF_DIM, 0], [34, Chords.HALF_DIM, 1], \n      [35, Chords.HALF_DIM, 2], [36, Chords.HALF_DIM, 3]],\n  ],\n  automatic: [\n    [[21, Chords.BIG_MAJOR, 0], [25, Chords.SMALL_MAJOR, 0], // part 1\n     [29, Chords.SMALL_MINOR, 0], [33, Chords.HALF_DIM, 0]],\n\n    [[21, Chords.BIG_MAJOR, 0], [22, Chords.BIG_MAJOR, 1], // part 2\n     [23, Chords.BIG_MAJOR, 2], [24, Chords.BIG_MAJOR, 3],\n     [25, Chords.SMALL_MAJOR, 0], [26, Chords.SMALL_MAJOR, 1],\n     [27, Chords.SMALL_MAJOR, 2], [28, Chords.SMALL_MAJOR, 3],\n     [29, Chords.SMALL_MINOR, 0], [30, Chords.SMALL_MINOR, 1],\n     [31, Chords.SMALL_MINOR, 2], [32, Chords.SMALL_MINOR, 3],\n     [33, Chords.HALF_DIM, 0], [34, Chords.HALF_DIM, 1],\n     [35, Chords.HALF_DIM, 2], [36, Chords.HALF_DIM, 3]],\n\n    [[21, Chords.BIG_MAJOR, 0], [22, Chords.BIG_MAJOR, 1], // part 3\n     [23, Chords.BIG_MAJOR, 2], [24, Chords.BIG_MAJOR, 3],\n     [25, Chords.SMALL_MAJOR, 0], [26, Chords.SMALL_MAJOR, 1],\n     [27, Chords.SMALL_MAJOR, 2], [28, Chords.SMALL_MAJOR, 3],\n     [29, Chords.SMALL_MINOR, 0], [30, Chords.SMALL_MINOR, 1],\n     [31, Chords.SMALL_MINOR, 2], [32, Chords.SMALL_MINOR, 3],\n     [33, Chords.HALF_DIM, 0], [34, Chords.HALF_DIM, 1],\n     [35, Chords.HALF_DIM, 2], [36, Chords.HALF_DIM, 3]]    \n  ],\n};\n\nconst correction_suffixes = {\n  [Chords.BIG_MAJOR]: \"A\",\n  [Chords.SMALL_MAJOR]: \"B\",\n  [Chords.SMALL_MINOR]: \"C\",\n  [Chords.HALF_DIM]: \"D\",\n};\n\nconst musical_pieces_correction_data = {\n  [Chords.BIG_MAJOR]: 1, \n  [Chords.SMALL_MAJOR]: 2, \n  [Chords.SMALL_MINOR]: 3, \n  [Chords.HALF_DIM]: 4 \n};\n\nconst TrainingScreen = ({chord, lesson_type, lesson_part, chord_button_labels, is_free, \n                         answer_received, replay_count, is_playing, next, replay}) => {\n  let song_image = null;\n  let desc_line1 = \"\\u00a0\";\n  let desc_line2 = \"\\u00a0\";\n\n  if (lesson_part === 0 && lesson_type === LessonType.MUSICAL_PIECES) {\n    const song_data = musical_pieces_data[chord];\n    desc_line1 = \"שם השיר:\";\n    desc_line2 = song_data.name;\n\n    song_image = (\n      <div className=\"row text-center\">\n        <img className=\"center-chord-image\" src={song_data.imgSrc} alt=\"\"/>\n      </div>\n    );\n  }\n\n  const replay_button = (is_free && !answer_received && replay_count > 0 && !is_playing) ? (\n    <div className=\"center-lesson-btn\">\n      <ReplayButton onClick={replay} />\n    </div>\n  ) : null;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 center-block text-center\">\n          <p className=\"chordName\">{desc_line1}</p>\n          <p className=\"chordName\">{desc_line2}</p>\n        </div>\n      </div>\n      <div className=\"row lesson-button-table\">\n        <ButtonTable labels={chord_button_labels} values={chord_button_labels} next={next} disabled={answer_received}/>\n      </div>\n      {song_image}\n      {replay_button}\n    </div>\n  );\n};\n\nconst CorrectFeedbackScreen = props => {\n  const { next } = props;\n  return (\n    <div className=\"row successScreenWrapper\">\n      <div className=\"col-sm-8 offset-sm-2 text-center\">\n        <span className=\"songTitle\"> { Strings.success_identification } &nbsp;</span>\n        <img src= { StaticImages.happySmiley } width=\"150px\" height=\"150px\" alt=\"\"/>\n        <br/>\n        <br/>\n        <ContinueButton next={next} />\n      </div>\n    </div>\n  );\n};\n\nconst IncorrectFeedbackScreen = props => {\n  const { shouldShowCorrect, shouldShowButton, correctChord, lesson_type, part, next} = props;\n\n  let appendix;\n\n  if (shouldShowCorrect === true){\n    const button = shouldShowButton ? <ContinueButton next={next} /> : null;\n    let text;\n    if (part === 2 || lesson_type === LessonType.AUTOMATIC) text = \"האקורד שהושמע הוא אקורד \";\n    else if (lesson_type === LessonType.MUSICAL_PIECES) text = \"בשיר יש אקורד \";\n    else text = \"בהקלטה יש אקורד \";\n    \n    appendix = \n      <div>\n        <span className=\"songTitle\">{ text } </span>\n        <span className=\"songTitle\">{ correctChord }</span>\n        <br/>\n        <span className=\"songTitle\">{ Strings.how_it_sounds }</span>\n        <br/>\n        <br/>\n        {button}\n      </div>;\n  } else appendix = null;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-9 offset-sm-1 text-center\">\n            <span className=\"songTitle\"> { Strings.failure_identification } &nbsp;</span>\n            <br/>\n            <span className=\"songTitle\">{ Strings.how_it_sounds }</span>\n            { appendix }\n        </div>\n        <div className=\"col-sm-2\">\n          <img src= { StaticImages.sadSmiley } width=\"150px\" height=\"150px\" alt=\"\" className=\"sadSmiley\"/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nclass TrainingPart extends React.Component {\n  state = {\n    trial_idx: 0,\n    done_loading: false,\n    is_playing_trial: true,\n    is_playing_incorrect: false,\n    is_playing_correct: false,\n    answer_received: false,\n    replay_count: 2,\n  };\n\n  trials_per_part = 16;\n\n  constructor({part, session, is_free, chord_buttons, next, data}) {\n    super();\n    this.part = part;\n    this.session = session;\n    this.is_free = is_free;\n    this.chord_buttons = chord_buttons;\n    this.next = next;\n    this.data = data;\n\n    switch (session.lesson_type) {\n    case LessonType.MUSICAL_PIECES:\n      this.part_data = training_data.musical_pieces[part];\n      break;\n    case LessonType.TONAL_CONTEXT:\n      this.part_data = training_data.tonal_context[part];\n      break;\n    case LessonType.AUTOMATIC:\n      this.part_data = training_data.automatic[part];\n      break;\n    };\n\n    this.ls_prefix = \"training_part\" + part + \"_\";\n    if (session.continued) {\n      this.sequence = ls.get(this.ls_prefix + \"sequence\");\n      const trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n      if (trial_idx !== null) this.state.trial_idx = trial_idx;\n      session.continued = false; // we only need to restore session once!\n    }\n    else {\n      this.sequence = randomSequence(this.part_data, this.trials_per_part);\n      ls.set(this.ls_prefix + \"sequence\", this.sequence);\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx);\n    }\n\n    console.log(\"Training sequence for part \" + this.part + \":\");\n    console.log(this.sequence);\n\n    const gen_letters_correction_list = (add_correct) => {\n      return this.part_data.map(d => {\n        let l = [];\n        const idx = d[0] < 1000 ? d[0] : d[0] - 1000;\n\n        for (const chord in correction_suffixes) {\n          if (chord !== d[1])\n            l.push(idx + correction_suffixes[chord]);\n        }\n        if (add_correct)\n          l.push(idx + \"Correct\");\n\n        if (d[0] >= 1000)\n          l.push(idx);\n\n        return l;\n      }).flat();\n    };\n    \n    let feedback_idxs = null;\n    \n    switch (this.session.lesson_type) {\n    case LessonType.MUSICAL_PIECES:\n      if (part === 0) {\n        feedback_idxs = [1, 2, 3, 4];\n      }\n      else {\n        feedback_idxs = gen_letters_correction_list(false);\n      }\n      break;\n    case LessonType.TONAL_CONTEXT:\n      feedback_idxs = gen_letters_correction_list(part < 2);\n      break;\n    case LessonType.AUTOMATIC:\n      feedback_idxs = gen_letters_correction_list(false);\n      break;\n    }\n\n    this.audioController = new AudioController(feedback_idxs.concat(this.part_data.map(d => d[0])), \n                                               this.doneLoadingAudio, this.donePlaying);\n  }\n\n  /* calculate the transposition count since the beginning of part. */\n  get_transposition_play_count() { \n    const idx = this.state.trial_idx;\n    const trial = this.sequence[idx];\n    const count_in_part = this.sequence.slice(0, idx)\n      .filter(t => t[1] === trial[1] && t[2] === trial[2]).length + 1;\n    return count_in_part;\n  }\n\n  doneLoadingAudio = () => {\n    this.setState({done_loading: true});\n    this.audioController.play(this.sequence[this.state.trial_idx][0]);\n    this.response_start = new Date();\n  };\n\n  donePlaying = () => {\n    if (this.state.is_playing_trial) {\n      // finished playing trial audio.\n      this.setState({is_playing_trial: false});\n      if (this.state.answer_received) {\n        if (!this.state.correct) {\n          this.audioController.play(this.state.selected_audio_idx);\n        }\n      }\n    }\n    else {\n      // finished playing correct or incorrect\n      if (this.state.is_playing_incorrect) {\n        // play the correct answer audio idx\n        this.audioController.play(this.state.correct_audio_idx);\n        this.setState({is_playing_correct: true,\n                       is_playing_incorrect: false});\n      } else if (this.state.is_playing_correct) {\n        // done playing feedback, show continue button.\n        this.setState({done_playing_correct_feedback: true,\n                       is_playing_correct: false});\n      }\n    }\n  }\n\n  replay = () => {\n    const { trial_idx, replay_count } = this.state;\n    this.setState({replay_count: replay_count-1, is_playing_trial: true});\n    this.audioController.play(this.sequence[trial_idx][0]);\n  }\n\n  nextTrial = () => {\n    const trial_idx = this.state.trial_idx;\n    if (trial_idx < this.trials_per_part - 1) {\n      this.audioController.play(this.sequence[trial_idx+1][0]);\n      this.setState({trial_idx: trial_idx + 1,\n                     is_playing_trial: true,\n                     answer_received: false});\n      this.response_start = new Date(); // RT measurement\n    }\n    else {\n      this.next();\n    }\n  }\n\n  processAnswer = (answer) => {\n    const trial_data = this.sequence[this.state.trial_idx];\n    const chord_name = trial_data[1];\n    const transposition = trial_data[2];\n\n    const correct = answer === chord_name;\n\n    // save trial data\n    const td = {\n      time: new Date().toString(),\n      strategy: LessonTypeNumbering[this.session.lesson_type],\n      part: this.part + 1,\n      is_free: this.is_free ? 1 : 2,\n      audio_index: trial_data[0],\n      chord_number: this.trials_per_part * this.part + this.state.trial_idx + 1,\n      chord_type: chord_name,\n      transposition: transposition + 1,\n      transposition_play_count: this.get_transposition_play_count(),\n      selected_chord_type: answer,\n      correct: correct,\n      response_time: new Date() - this.response_start,\n    };\n    this.data.trials.push(td);\n    ls.set(\"data\", this.data);\n    if (this.state.trial_idx+1 < this.trials_per_part)\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx+1);\n\n    // continue to show answer feedback\n    if (!correct) {\n      // find the right selected and correct audio indices.\n\n      const c_idx = trial_data[0] < 1000 ? trial_data[0] : trial_data[0] - 1000;\n      let selected_audio_idx, correct_audio_idx;\n\n      if (this.session.lesson_type === LessonType.MUSICAL_PIECES && this.part===0) {\n        selected_audio_idx = musical_pieces_correction_data[answer];\n        correct_audio_idx = musical_pieces_correction_data[trial_data[1]];\n      }\n      else {\n        selected_audio_idx = c_idx + correction_suffixes[answer];\n        if (this.session.lesson_type === LessonType.TONAL_CONTEXT && this.part < 2) {\n          correct_audio_idx = c_idx + \"Correct\";\n        }\n        else {\n          correct_audio_idx = c_idx;\n        }\n      }\n\n      if (!this.state.is_playing_trial) {\n        this.audioController.play(selected_audio_idx);\n      }\n\n      this.setState({answer_received: true,\n                     correct: correct,\n                     is_playing_incorrect: true,\n                     is_playing_correct: false,\n                     done_playing_correct_feedback: false,\n                     correct_audio_idx: correct_audio_idx,\n                     selected_audio_idx: selected_audio_idx});\n\n    }\n    else {        \n      this.setState({answer_received: true,\n                     correct: correct});\n    }\n  }\n\n  render() {\n    const trial_data = this.sequence[this.state.trial_idx];\n    const chord_name = trial_data[1];\n    const transposition = trial_data[2];\n    \n    if (!this.state.done_loading) {\n      return <LoadingScreen />;\n    }\n\n    else if (this.state.answer_received && !this.state.is_playing_trial) {\n      // show feedback screen\n      if (this.state.correct) {\n        return <CorrectFeedbackScreen next={this.nextTrial}/>;\n      } else {\n        return <IncorrectFeedbackScreen shouldShowCorrect={!this.state.is_playing_incorrect} \n                                        shouldShowButton={this.state.done_playing_correct_feedback} \n                                        correctChord={chord_name} lesson_type={this.session.lesson_type} \n                                        next={this.nextTrial} part={this.part}/>;\n      }\n    }\n\n    else { \n      return (\n        <TrainingScreen chord={chord_name} lesson_type={this.session.lesson_type} lesson_part={this.part} \n                        chord_button_labels={this.chord_buttons} is_free={this.is_free} \n                        answer_received={this.state.answer_received} replay_count={this.state.replay_count} \n                        is_playing={this.state.is_playing_trial} next={this.processAnswer} replay={this.replay}/>\n      );\n    }\n  }\n};\n\nexport class TrainingBlock extends React.Component {\n  steps = {\n    INFO_A: 1,\n    PART_A: 2,\n    INFO_B: 3,\n    PART_B: 4,\n    INFO_C: 5,\n    PART_C: 6,\n    DONE: 7,\n  }\n\n  state = {\n    step: 1,\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n\n    this.setState({\n      step: step + 1\n    });\n\n    ls.set(\"training_block_step\", step + 1);\n\n    if (step + 1 === this.steps.DONE)\n      this.next();\n  }\n\n  constructor({data, session, is_free, next}) {\n    super();\n    this.data = data;\n    this.session = session;\n    this.next = next;\n    this.chord_buttons = session.chord_button_labels;\n    this.is_free = is_free;\n\n    if (session.continued) {\n      this.state.step = ls.get(\"training_block_step\");\n    }\n    else {\n      ls.set(\"training_block_step\", this.state.step);\n    }\n  }\n\n  render() {\n    const { step } = this.state;\n    let screen;\n    switch (step) {\n    case this.steps.INFO_A:\n      this.session.continued = false;\n      screen = <TrainingInfo lesson_type={this.session.lesson_type} is_free={this.is_free} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_A:\n      screen = <TrainingPart part={0} session={this.session} is_free={this.is_free} next={this.nextStep} key={step} chord_buttons={this.chord_buttons} data={this.data} />;\n      break;\n    case this.steps.INFO_B:\n      this.session.continued = false;\n      screen = <InfoBeforeTrainingPartB lesson_type={this.session.lesson_type} is_free={this.is_free} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_B:\n      screen = <TrainingPart part={1} session={this.session} is_free={this.is_free} next={this.nextStep} key={step} chord_buttons={this.chord_buttons} data={this.data} />;\n      break;\n    case this.steps.INFO_C:\n      this.session.continued = false;\n      screen = <InfoBeforeTrainingPartC lesson_type={this.session.lesson_type} is_free={this.is_free} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PART_C:\n      screen = <TrainingPart part={2} session={this.session} is_free={this.is_free} next={this.nextStep} key={step} chord_buttons={this.chord_buttons} data={this.data} />;\n      break;\n    case this.steps.DONE:\n      screen = null;\n      break;\n    };\n\n    return screen;\n  }\n}\n","/* functions for reading and writing to a google spreadsheet.\n   \n */\n\nconst read_url = \"https://sheets.googleapis.com/v4/spreadsheets/\";\n\n// https://stackoverflow.com/questions/1714786/query-string-encoding-of-a-javascript-object\nexport const serialize = function(obj, prefix) {\n  var str = [],\n    p;\n  for (p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      var k = prefix ? prefix + \"[\" + p + \"]\" : p,\n        v = obj[p];\n      str.push((v !== null && typeof v === \"object\") ?\n        serialize(v, k) :\n        encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n  console.log(\"serialize: \" + str.join(\"&\"));\n  return str.join(\"&\");\n}\n\nconst parse_sheet_list = (data) => {\n  let sheetNames = [];\n  data.sheets.forEach(sheet => {\n    sheetNames.push(sheet.properties.title);\n  });\n  return sheetNames;\n};\n\nconst gs = {\n  read: function(conn, sheetName, range) {\n    return fetch(read_url + \n                 conn.spreadsheet_id + \n                 \"/values/\" + \n                 sheetName + \n                 \"!\" + range + \n                 \"?key=\" + conn.api_key);\n  },\n\n  write: function(conn, sheetName, data) {\n    if (!Array.isArray(data))\n        data = [data];\n\n    let url = conn.write_url + \"?sheet_name=\" + sheetName;\n    return fetch(url,\n                 {\n                   headers: {\n                     'Accept': 'application/json',\n                     'Content-Type': 'application/json'\n                   },\n                   method: \"POST\",\n                   mode: 'no-cors',\n                   body: JSON.stringify(data),\n                 });\n  },\n\n  list_sheets: function(conn) {\n    return fetch(read_url + conn.spreadsheet_id + \"?key=\" + conn.api_key)\n      .then(res => res.json())\n      .then(parse_sheet_list);\n  },\n};\n\nexport default gs;\n","import gs from './spreadsheet_io.js';\nimport { SheetNames } from './defs.js';\n\nconst FIRST_HOUR_OF_DAY = 3; // day starts at 3 am.\n\nexport const SessionEvent = {\n  SESSION_START: \"SESSION_START\",\n  SESSION_CONTINUED: \"SESSION_CONTINUED\",\n  SESSION_END: \"SESSION_END\",\n};\n\n// parse session json data from sheets api into an array of session objects.\nexport const parseSessions = (data) => {\n  let sessions = [];\n  data.values.forEach(session_event => {\n    let session = {\n      id: session_event[0],\n      number: session_event[1],\n      event: session_event[2],\n      lesson_type: session_event[3],\n      time: session_event[4],\n    };\n    sessions.push(session);\n  });\n  return sessions;\n};\n\nexport const writeSessionEvent = (conn, session, event, on_error) => {\n  let request_data = Object.assign({event: event,\n                                    time: new Date().toString()},\n                                    session);\n  gs.write(conn, SheetNames.TRAINING_SESSIONS, request_data)\n    .catch(on_error);\n\n};\n\nexport const readSessionData = (conn) => {\n  return gs.read(conn, SheetNames.TRAINING_SESSIONS, \"A2:E10000\")\n    .then(response => response.json())\n    .then(parseSessions);\n  \n};\n\nexport const readLessonType = (conn, id) => {\n  const findLessonType = (data) => {\n    let lesson_type = -1;\n    data.values.forEach(row => {\n      if (row[0] === id)\n        lesson_type = parseInt(row[1]);\n    });    \n    return lesson_type;\n  }\n\n  return gs.read(conn, SheetNames.LESSON_TYPES, \"A2:B10000\")\n    .then(response => response.json())\n    .then(findLessonType);\n};\n\n// Return true if the last session was today. Day starts at FIRST_HOUR_OF_DAY\nexport const was_last_session_today = (last_session) => {\n  let last_time = new Date(last_session.time);\n  last_time.setHours(last_time.getHours() - FIRST_HOUR_OF_DAY);\n  let now = new Date();\n  now.setHours(now.getHours() - FIRST_HOUR_OF_DAY);\n  return now.getDate() === last_time.getDate();\n};\n\nexport const does_user_sheet_exists = (conn, user_id) => {\n  return gs.list_sheets(conn)\n    .then(sheets => sheets.includes(user_id));\n};\n\nexport const read_subject_data = (conn, id) => {\n  return gs.read(conn, SheetNames.SUBJECTS_DATA, \"A2:C10000\")\n    .then(response => response.json())\n    .then(data => {\n      for (const row of data.values) {\n        if (row[0] === id) {\n          return {\n            lesson_type: row[1],\n            chord_button_labels: JSON.parse(row[2])\n          };\n        }\n      }\n\n      return null;\n    });\n};\n\nexport const write_subject_data = (conn, session, on_error) => {\n  const data = {\n    id: session.id,\n    lesson_type: session.lesson_type,\n    chord_button_labels: JSON.stringify(session.chord_button_labels)\n  }\n\n  gs.write(conn, SheetNames.SUBJECTS_DATA, data)\n    .catch(on_error);\n};\n","import React from 'react';\nimport '../Experiment.css';\nimport './TrainingExperiment.css';\nimport { IntroText, InfoText, PretestInfo } from './info.js';\nimport { Chords, LessonType }  from '../defs.js';\nimport { LessonBlock } from './lesson_block.js';\nimport { TrainingBlock } from './training_block.js';\nimport { InfoScreen, LoadingScreen, ErrorScreen, ContinueButton, ButtonTable } from '../ui.js';\nimport { write_subject_data, read_subject_data, does_user_sheet_exists, was_last_session_today, SessionEvent, writeSessionEvent, readSessionData, readLessonType } from '../sessions.js';\nimport { shuffleArray, randomSequence } from '../randomize.js';\nimport gs from '../spreadsheet_io.js';\nimport ls from 'local-storage';\n\nconst MAX_NUMBER_OF_SESSIONS = 5;\n\n// 1st screen.\nconst IntroScreen = ({next, data}) => {\n  function handleContinue() {\n    data.id = document.getElementById('id_input').value;\n    next();\n  }\n\n  return ( // the hidden p tag is there to balance the \" marks\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 infotext\">\n          <IntroText />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col text-center\">\n          <br/>\n          <label>ת\"ז: <input type=\"text\" id=\"id_input\"/><br/></label>\n          <p hidden>\"</p>\n          <br/>\n          <ContinueButton next={handleContinue} disabled={false} />\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n\nconst FinishScreen = ({done_saving, session_number}) => {\n  const remaining = MAX_NUMBER_OF_SESSIONS - session_number;\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-8 offset-md-2\">\n        <p>הפעלה מספר {session_number} הסתיימה. נותרו עוד {remaining} הפעלות.</p>\n        <p>{done_saving ? \"הנתונים נשמרו בהצלחה!\" : \"אנא המתן לשמירת הנתונים...\"}</p>\n      </div>\n    </div>\n  );\n};\n\nconst ContinueScreen = ({session_number, next}) => {\n  const info = <p className=\"text-center\">לחץ על הכפתור כדי להמשיך את הפעלה מספר {session_number}.</p>;\n  return <InfoScreen info={info} next={next} />;\n};\n\nconst AssociationForm = ({data, session, next}) => {\n  const save_data = () => {\n    const chord_associations = document.getElementById('chord_associations').value;\n\n    if (chord_associations.length===0) {\n      next();\n    }\n    else {\n      const td = {\n        time: new Date().toString(),\n        session_number: session.number,\n        chord_associations: chord_associations\n      };\n      data.trials.push(td);\n      ls.set(\"data\", data);\n      next();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-2 association-form\">\n          <label htmlFor=\"chord_associations\">אם השתמשתם/ן באסוציאציות לזיהוי האקורדים, אנא ציינו כעת באילו אסוציאציות השתמשתם/ן:</label>\n          <textarea id=\"chord_associations\" rows=\"5\" cols=\"70\"/>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-2 text-center\">\n          <ContinueButton next={save_data} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nclass PretestBlock extends React.Component {\n  state = {\n    trial_idx: 0,\n  };\n\n  practice_trials_count = 8;\n  test_trails_count = 20;\n  button_idxs = [0, 1, 2, 3];\n\n  constructor({session, next, data}) {\n    super();\n    this.next = next;\n    this.data = data;\n    this.session = session;\n\n    this.ls_prefix = \"pretest_\";\n    if (session.continued) {\n      this.sequence = ls.get(this.ls_prefix + \"sequence\");\n      const trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n      if (trial_idx !== null) this.state.trial_idx = trial_idx;\n      session.continued = false;\n    }\n    else {\n      const practice_sequence = randomSequence(this.button_idxs, this.practice_trials_count);\n      const test_sequence = randomSequence(this.button_idxs, this.test_trails_count);\n      this.sequence = practice_sequence.concat(test_sequence);\n      ls.set(this.ls_prefix + \"sequence\", this.sequence);\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx);\n    }\n\n    this.response_start = new Date();\n  }\n\n  render() {\n    const that = this;\n    const target_btn = this.sequence[this.state.trial_idx];\n\n    const nextTrial = (selection) => {\n      if (this.state.trial_idx+1 > this.practice_trials_count) {\n        // save trial data\n        const correct = selection === target_btn;\n        const td = {\n          time: new Date().toString(),\n          correct: correct,\n          response_time: new Date() - that.response_start,\n          session_number: 0,\n        };\n        that.data.trials.push(td);\n        ls.set(\"data\", that.data);\n      }\n\n      if (this.state.trial_idx < that.practice_trials_count + that.test_trails_count - 1) {\n        that.setState({trial_idx: this.state.trial_idx + 1});\n        that.response_start = new Date();\n        ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx+1);\n      }\n      else {\n        that.next();\n      }\n    };\n    let labels = [null, null, null, null];\n    labels[target_btn] = <div className=\"pretestCircle\"></div>;\n    return (\n      <div className=\"container\">\n        <ButtonTable labels={labels} values={this.button_idxs} next={nextTrial} key={this.state.trial_idx}/>\n      </div>\n    );\n  }\n};\n\nclass TrainingExperiment extends React.Component {\n  conn = { // read/write connection details for google spreadsheet.\n    spreadsheet_id: '1D2s3D13ldvchzueCFWTkvH8kzhNBEMZzizPnjGQnhMY',\n    api_key: 'AIzaSyDHFHbGy_GhEt1Q4FW61YYEX2jk3hZcSoQ',\n    write_url: 'https://script.google.com/macros/s/AKfycbxv6Uc9VsHlKI6SMe6YmH-MELryrJYvYg-uQnGFhyMF2X7zyC-O/exec',\n  }\n\n  steps = {\n    INTRO: 1,\n    INFO: 2, \n    PRETEST_INFO: 3,\n    PRETEST: 4, \n    LESSON: 5,\n    FREE_TRAINING: 6,\n    FAST_TRAINING: 7,\n    ASSOCIATION_FORM: 8, // only when lesson type is automatic.\n    FINISH: 9\n  }\n\n  state = {\n    step: 1,\n    is_loading_session: true, // true until session data is received.\n    did_check_user_registered: false, // false until sheet list is received.\n    done_saving: false, // false until the data is saved to the spreadsheet.\n    max_sessions_reached: false,\n    session_done_for_today: false,\n    user_unregistered: true,\n    did_load_registration_list: false,\n    did_load_lesson_type: false,\n  };\n\n  data = {\n    id: undefined,\n    trials: [],\n  };\n\n  // Check previous sessions data. Start a new session accordingly\n  // or enforce session limits.\n  maybe_start_session = () => {\n    let session = {id: this.data.id};\n    const previous_sessions = this.sessions.filter(e => e.id === session.id);\n    if (previous_sessions.length === 0) {\n      // First session\n      ls.clear();\n      session.number = 1;\n      this.start_new_session(session);\n    }\n    else {\n      // Not first session\n      const last_session = previous_sessions[previous_sessions.length-1];\n      const last_session_number = parseInt(last_session.number);\n      \n      session.lesson_type = parseInt(last_session.lesson_type);\n      if (last_session.event !== SessionEvent.SESSION_END) {\n        // The last session for this subject id isn't finished.\n        if (was_last_session_today(last_session)) {\n          // Same day. Try to continue the last session.\n          session.number = last_session_number;\n          // Retreive session and data from local storage.\n          console.log(\"Looking for session data in local storage.\");\n          const continued_session = ls.get('session');\n          if (continued_session && continued_session.id === session.id) {\n            session = continued_session;\n            const continued_data = ls.get('data');\n            if (continued_data) {\n              console.log(\"Loading experiment data from local storage.\");\n              this.data = continued_data;\n            }\n            \n            const continued_step = ls.get('step');\n            session.continued = true;\n            this.setState({continued_step: continued_step || this.steps.INFO,\n                           session: session});\n            this.stepChanged(continued_step);\n          } \n          else {\n            // Can't continue session. Redo the session (this shouldn't actually happen)\n            ls.clear();\n            session.number = last_session_number;\n            this.start_new_session(session);\n          }\n        }\n        else {\n          // A new day.\n          ls.clear();\n          this.setState({cant_continue_session: true,\n                         session: session});\n        }\n      }\n      else {\n        // The last session was finished. \n        ls.clear();\n        if (last_session_number >= MAX_NUMBER_OF_SESSIONS) {\n          // enforce the session limit.\n          this.setState({max_sessions_reached: true,\n                         session: session});\n        }\n        else {\n          if (!was_last_session_today(last_session)) {\n            // Start a new session\n            session.number = last_session_number + 1;\n            this.start_new_session(session);\n          }\n          else {\n            // No more sessions for today.\n            this.setState({session_done_for_today: true,\n                           session: session});\n          }\n        }\n      }\n    }\n  }\n\n  start_new_session = (session) => {\n    if (session.number === 1) {\n      // First session. Read lesson type from the LessonTypes spreadsheet (the table is maintained by \n      // the experimenter), and generate a random chord button order for all sessions and test.\n      // Write the data to the SubjectsData spreadsheet.\n      readLessonType(this.conn, session.id)\n        .then(lesson_type => {\n          if (lesson_type === -1)\n            this.setState({session: session, \n                           user_unregistered: true,\n                           did_load_lesson_type: true});\n          else {\n            session.lesson_type = lesson_type;            \n            session.chord_button_labels = shuffleArray([Chords.BIG_MAJOR, Chords.SMALL_MAJOR, \n                                                        Chords.SMALL_MINOR, Chords.HALF_DIM]);\n            ls.set('session', session);\n\n            writeSessionEvent(this.conn, session, \n                              SessionEvent.SESSION_START);\n            write_subject_data(this.conn, session);\n\n            this.setState({session: session,\n                           did_load_lesson_type: true});\n          }\n        })\n        .catch(err => { alert(\"Error while reading lessons: \" + err); });\n    }\n    else {\n      // Not first session. Read lesson type and button order from the SubjectsData spreadsheet.\n      read_subject_data(this.conn, session.id)\n        .then((subject_data) => {\n          if (subject_data) {\n            session.chord_button_labels = subject_data.chord_button_labels;\n            session.lesson_type = parseInt(subject_data.lesson_type);\n            ls.set('session', session);\n            writeSessionEvent(this.conn, session, \n                              SessionEvent.SESSION_START);\n            this.setState({session: session,\n                           did_load_lesson_type: true});\n          }\n          else {\n            this.setState({session: session,\n                           cant_read_subject_data: true});\n          }\n        })\n        .catch(err => {\n          alert(\"Error while reading subject data:\" + err);\n        });\n    }\n  }\n\n  continue_session = () => {\n    const { continued_step, step } = this.state;\n    this.stepWillChange(step, continued_step);\n    this.setState({\n      step: continued_step,\n      continued_step: undefined\n    });\n    this.stepChanged(continued_step);\n\n    ls.set('session', this.state.session);\n    writeSessionEvent(this.conn, this.state.session, \n                      SessionEvent.SESSION_CONTINUED, this.sessionEventError);\n  }\n\n\n  nextStep = () => {\n    const { step } = this.state;\n    let new_step = step + 1;\n\n    if (this.state.session && this.state.session.number) {\n      if (this.state.session.number !== 1 && \n          (step + 1 === this.steps.PRETEST_INFO || step + 1 === this.steps.PRETEST))\n        // jump over pretest after the 1st session.\n        new_step = this.steps.PRETEST + 1;\n      else if (step + 1 === this.steps.ASSOCIATION_FORM && \n               !(this.state.session.lesson_type === LessonType.AUTOMATIC &&\n                 (this.state.session.number === 1 || this.state.session.number === MAX_NUMBER_OF_SESSIONS)))\n        // jump over association form unless this is the 1st or last session of automatic lesson type.\n        new_step = this.steps.ASSOCIATION_FORM + 1;\n    }\n\n    if (step > 1) // otherwise the key will be overwritten before loading.\n      ls.set('step', new_step);\n\n    this.stepWillChange(step, new_step);\n    this.setState({\n      step: new_step\n    });\n    this.stepChanged(new_step);\n  }\n\n  stepWillChange = (step, new_step) => {\n    if (step === this.steps.INTRO) {\n      // Start the session logic after entering subject id in the first screen.\n      does_user_sheet_exists(this.conn, this.data.id)\n        .then((sheet_exists) => { \n          this.setState({did_load_registration_list: true});\n          if (sheet_exists) {\n            this.setState({user_unregistered: false});\n            this.maybe_start_session(); \n          }\n          else this.setState({user_unregistered: true, session: {}});\n        }).catch(this.sessionDataLoadError);\n    }\n  } \n\n  stepChanged = (step) => {   \n    if (step === this.steps.FINISH) {\n      // end of session. \n      this.data.end_time = new Date().toString();\n\n      // write data\n      console.log(\"Saving data...\");\n\n      this.data.trials.forEach(t => { \n        t.id = this.data.id;\n        if (t.session_number === undefined)\n          t.session_number = this.state.session.number;\n        t.start_time = this.data.start_time;\n        t.end_time = this.data.end_time;\n      });\n\n      let that = this;\n      gs.write(this.conn, this.data.id, this.data.trials)\n        .then(res => { that.setState({done_saving: true});\n                       ls.clear(); })\n        .catch(this.dataSaveError);\n\n      // write session ended event\n      writeSessionEvent(this.conn, this.state.session, \n                        SessionEvent.SESSION_END, this.sessionEventError);\n      // TODO: need to make sure both writes finished before setting done_saving: true!\n\n      // clear session from local storage. TODO: also do this only after both saves are done.\n\n    }\n  }\n\n  dataSaveError = (response) => {\n    alert(\"Error while saving data: \" + response);\n  }\n\n  sessionEventError = (response) => { // TODO\n    alert(\"Error while writing session event.\");\n  }\n\n  sessionDataLoaded = (session_data) => {\n    this.setState({ is_loading_session: false });\n    this.sessions = session_data;\n  }\n\n  sessionDataLoadError = (response) => { // TODO\n    // ask to refresh the page, try again... contact info?\n    alert(\"Session data load error: \" + response);\n  }\n\n  componentDidMount() {\n    // read session data\n    var that = this;\n    \n    readSessionData(this.conn)\n      .then(that.sessionDataLoaded)\n      .catch(that.sessionDataLoadError);\n\n    this.data.start_time = new Date().toString();\n  }\n\n  getScreenForStep(step) {\n    let screen;\n    switch(step) {\n    case this.steps.INTRO:\n      screen = <IntroScreen data={this.data} next={this.nextStep} key={step}/>;\n      break;\n    case this.steps.INFO:\n      this.state.session.continued = false;\n      const info = <InfoText lesson_type={this.state.session.lesson_type} key={step} />;\n      screen = <InfoScreen info={info} next={this.nextStep}/>;\n      break;\n    case this.steps.PRETEST_INFO:\n      this.state.session.continued = false;\n      const pretest_info = <PretestInfo />;\n      screen = <InfoScreen info={pretest_info} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.PRETEST:\n      screen = <PretestBlock data={this.data} next={this.nextStep} session={this.state.session} key={step} />;\n      break;\n    case this.steps.LESSON:\n      screen = <LessonBlock data={this.data} next={this.nextStep} session={this.state.session} key={step} />;\n      break;\n    case this.steps.FREE_TRAINING:\n      screen = <TrainingBlock data={this.data} is_free={true} next={this.nextStep} session={this.state.session} key={step} />;\n      break;\n    case this.steps.FAST_TRAINING:\n      screen = <TrainingBlock data={this.data} is_free={false} next={this.nextStep} session={this.state.session} key={step} />;\n      break;\n    case this.steps.ASSOCIATION_FORM:\n      screen = <AssociationForm data={this.data} session={this.state.session} next={this.nextStep} key={step} />;\n      break;\n    case this.steps.FINISH:\n      screen = <FinishScreen done_saving={this.state.done_saving} session_number={this.state.session.number}  key={step}/>;\n      break;\n    }\n    \n    return screen;\n  } \n\n  render() {\n    const {step} = this.state;\n\n    let screen;\n\n    if (this.state.is_loading_session || !this.state.did_load_lesson_type)\n      screen = <LoadingScreen />;\n    \n    if (this.state.continued_step !== undefined) {\n      screen = <ContinueScreen session_number={this.state.session.number} next={this.continue_session}/>;\n    } else if (this.state.step === 2) {\n      // After entering ID on the intro screen we check the session data before continuing.\n      if (!this.state.did_load_registration_list || !this.state.session) \n        screen = <LoadingScreen />;\n      else {\n        if (this.state.max_sessions_reached)\n          screen = <ErrorScreen error=\"עברת את מספר ההפעלות המותר.\" />;\n        else if (this.state.session_done_for_today)\n          screen = <ErrorScreen error=\"ביצעת כבר הפעלה אחת של התוכנה היום. ניתן להתחבר שוב מחר.\" />;\n        else if (this.state.did_load_registration_list && this.state.user_unregistered)\n          screen = <ErrorScreen error=\"מספר הנבדק לא קיים במערכת! אנא צרו קשר עם הנסיינית ונסו שוב.\" />;\n        else if (this.state.cant_continue_session) \n          screen = <ErrorScreen error=\"ההפעלה האחרונה שלך לא הושלמה. לא ניתן להמשיך בניסוי. אנא צרו קשר עם הנסיינית.\" />;\n        else if (this.state.cant_read_subject_data)\n          screen = <ErrorScreen error={\"לא ניתן לקרוא נתונים עבור נבדק \" + this.data.id + \".\"} />;\n        else screen = this.getScreenForStep(step);\n      }\n    }\n    else screen = this.getScreenForStep(step);\n\n    return screen;\n  }\n}\n\nexport default TrainingExperiment;\n","import React from 'react';\nimport { Button, ButtonTable } from '../ui.js';\nimport ls from 'local-storage';\nimport { randomSequence } from '../randomize.js';\n\nconst PretestTrial = ({button_labels, next, trial_idx, trial_chord}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"overlay-box\"><p>{trial_chord}</p></div>\n      <div className=\"row\">\n        <ButtonTable labels={button_labels} values={button_labels} next={next} key={trial_idx} hide_fixation={true}/>\n      </div>\n    </div>    \n\n  );\n};\n\nconst ContinueScreen = ({next, on_keep_going}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <p>האם ברצונך להמשיך בתרגול היבש?</p>\n        </div>\n      </div>\n      <br/>\n      <div className=\"row\">\n        <div className=\"col-sm-2 offset-sm-4 text-center\">\n          <Button label=\"כן\" onClick={on_keep_going}/>\n        </div>      \n        <div className=\"col-sm-2 text-center\">\n          <Button label=\"לא\" onClick={next}/>\n        </div>\n      </div>            \n    </div>\n  );\n};\n\nexport class PretestBlock extends React.Component {\n  state = {\n    trial_idx: 0,\n    keep_going: false,\n  }\n\n  trials_count = 14;\n\n  ls_prefix = \"test_pretest_\";\n\n  constructor({data, next, button_labels}) {\n    super();\n    this.data = data;\n    this.next = next;\n    this.button_labels = button_labels;\n    \n    const cont_trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n    if (cont_trial_idx !== null) {      \n      console.log(\"loading sequence from local storage\");\n      this.sequence = ls.get(this.ls_prefix + \"sequence\");\n      this.state.trial_idx = cont_trial_idx;\n    }\n    else {\n      this.sequence = randomSequence(button_labels, this.trials_count);\n      ls.set(this.ls_prefix + \"sequence\", this.sequence);\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx);      \n    }\n//    console.log(\"sequence:\");\n//    console.log(this.sequence);\n  }\n\n  nextTrial = (answer) => {\n    const { trial_idx } = this.state;\n\n    this.data.trials.push({\n      time: new Date().toString(),\n      subtest: 0,\n      chord_type: this.sequence[trial_idx % this.trials_count],\n      selected_chord_type: answer,\n      correct: answer === this.sequence[trial_idx % this.trials_count],\n      response_time: new Date() - this.response_start\n    });\n    ls.set(\"test_data\", this.data);\n\n    this.setState({trial_idx: trial_idx + 1,\n                   keep_going: false});\n    ls.set(this.ls_prefix + \"trial_idx\", trial_idx + 1);\n    this.response_start = new Date();\n  }\n\n  keepGoing = () => {\n    this.sequence = randomSequence(this.button_labels, this.trials_count);\n    ls.set(this.ls_prefix + \"sequence\", this.sequence);      \n    console.log(\"sequence:\");\n    console.log(this.sequence);\n    this.setState({keep_going: true});\n    this.response_start = new Date();\n  };\n\n  componentDidMount() {\n    this.response_start = new Date();\n  }\n  \n  render() {\n    const { trial_idx } = this.state;\n    if (trial_idx > 0 && this.state.keep_going === false && ((trial_idx) % this.trials_count === 0)) {\n      return <ContinueScreen next={this.next} on_keep_going={this.keepGoing} />;\n    }\n    else {\n      return <PretestTrial button_labels={this.button_labels} next={this.nextTrial} trial_idx={this.state.trial_idx} trial_chord={this.sequence[this.state.trial_idx % this.trials_count]}/>;\n    }\n  }\n}\n\n","import { Chords, Timbres } from '../defs.js';\n\n// subtest number -> [[audio_idx, chord, transposition, timbre], ...]\nexport const audio_mapping = [\n  // Subtest A\n  [[57, Chords.BIG_MAJOR, 0, Timbres.PIANO], [58, Chords.BIG_MAJOR, 1, Timbres.PIANO],\n   [59, Chords.BIG_MAJOR, 2, Timbres.PIANO], [60, Chords.BIG_MAJOR, 3, Timbres.PIANO],\n   [61, Chords.SMALL_MAJOR, 0, Timbres.PIANO], [62, Chords.SMALL_MAJOR, 1, Timbres.PIANO],\n   [63, Chords.SMALL_MAJOR, 2, Timbres.PIANO], [64, Chords.SMALL_MAJOR, 3, Timbres.PIANO],\n   [65, Chords.SMALL_MINOR, 0, Timbres.PIANO], [66, Chords.SMALL_MINOR, 1, Timbres.PIANO],\n   [67, Chords.SMALL_MINOR, 2, Timbres.PIANO], [68, Chords.SMALL_MINOR, 3, Timbres.PIANO],\n   [69, Chords.HALF_DIM, 0, Timbres.PIANO], [70, Chords.HALF_DIM, 1, Timbres.PIANO],\n   [71, Chords.HALF_DIM, 2, Timbres.PIANO], [72, Chords.HALF_DIM, 3, Timbres.PIANO],\n\n   [73, Chords.BIG_MAJOR, 0, Timbres.GUITAR], [74, Chords.BIG_MAJOR, 1, Timbres.GUITAR],\n   [75, Chords.BIG_MAJOR, 2, Timbres.GUITAR], [76, Chords.BIG_MAJOR, 3, Timbres.GUITAR],\n   [77, Chords.SMALL_MAJOR, 0, Timbres.GUITAR], [78, Chords.SMALL_MAJOR, 1, Timbres.GUITAR],\n   [79, Chords.SMALL_MAJOR, 2, Timbres.GUITAR], [80, Chords.SMALL_MAJOR, 3, Timbres.GUITAR],\n   [81, Chords.SMALL_MINOR, 0, Timbres.GUITAR], [82, Chords.SMALL_MINOR, 1, Timbres.GUITAR],\n   [83, Chords.SMALL_MINOR, 2, Timbres.GUITAR], [84, Chords.SMALL_MINOR, 3, Timbres.GUITAR],\n   [85, Chords.HALF_DIM, 0, Timbres.GUITAR], [86, Chords.HALF_DIM, 1, Timbres.GUITAR],\n   [87, Chords.HALF_DIM, 2, Timbres.GUITAR], [88, Chords.HALF_DIM, 3, Timbres.GUITAR],   \n  ],\n\n  // Subtest B\n  [[89, Chords.BIG_MAJOR, 0, Timbres.SONG], [90, Chords.SMALL_MAJOR, 0, Timbres.SONG],\n   [91, Chords.SMALL_MINOR, 0, Timbres.SONG], [92, Chords.HALF_DIM, 0, Timbres.SONG],\n   [93, Chords.BIG_MAJOR, 1, Timbres.SONG], [94, Chords.BIG_MAJOR, 2, Timbres.SONG],\n   [95, Chords.BIG_MAJOR, 3, Timbres.SONG], [96, Chords.SMALL_MAJOR, 1, Timbres.SONG],\n   [97, Chords.SMALL_MAJOR, 2, Timbres.SONG], [98, Chords.SMALL_MAJOR, 3, Timbres.SONG],\n   [99, Chords.SMALL_MINOR, 1, Timbres.SONG], [100, Chords.SMALL_MINOR, 2, Timbres.SONG],\n   [101, Chords.SMALL_MINOR, 3, Timbres.SONG], [102, Chords.HALF_DIM, 1, Timbres.SONG],\n   [103, Chords.HALF_DIM, 3, Timbres.SONG], [104, Chords.HALF_DIM, 2, Timbres.SONG],\n  ],\n\n  // Subtest C\n  [[105, Chords.BIG_MAJOR, 0, Timbres.PIANO], [106, Chords.BIG_MAJOR, 1, Timbres.PIANO],\n   [107, Chords.BIG_MAJOR, 2, Timbres.PIANO], [108, Chords.BIG_MAJOR, 3, Timbres.PIANO],\n   [109, Chords.BIG_MAJOR, 0, Timbres.PIANO], [110, Chords.BIG_MAJOR, 1, Timbres.PIANO],\n   [111, Chords.BIG_MAJOR, 2, Timbres.PIANO], [112, Chords.BIG_MAJOR, 3, Timbres.PIANO],\n   [113, Chords.BIG_MAJOR, 0, Timbres.PIANO], [114, Chords.BIG_MAJOR, 1, Timbres.PIANO],\n   [115, Chords.BIG_MAJOR, 2, Timbres.PIANO], [116, Chords.BIG_MAJOR, 3, Timbres.PIANO],\n   [117, Chords.BIG_MAJOR, 0, Timbres.PIANO], [118, Chords.BIG_MAJOR, 1, Timbres.PIANO],\n   [119, Chords.BIG_MAJOR, 2, Timbres.PIANO], [120, Chords.BIG_MAJOR, 3, Timbres.PIANO],\n\n   [121, Chords.SMALL_MAJOR, 0, Timbres.PIANO], [122, Chords.SMALL_MAJOR, 1, Timbres.PIANO],\n   [123, Chords.SMALL_MAJOR, 2, Timbres.PIANO], [124, Chords.SMALL_MAJOR, 3, Timbres.PIANO],\n   [125, Chords.SMALL_MAJOR, 0, Timbres.PIANO], [126, Chords.SMALL_MAJOR, 1, Timbres.PIANO],\n   [127, Chords.SMALL_MAJOR, 2, Timbres.PIANO], [128, Chords.SMALL_MAJOR, 3, Timbres.PIANO],\n   [129, Chords.SMALL_MAJOR, 0, Timbres.PIANO], [130, Chords.SMALL_MAJOR, 1, Timbres.PIANO],\n   [131, Chords.SMALL_MAJOR, 2, Timbres.PIANO], [132, Chords.SMALL_MAJOR, 3, Timbres.PIANO],\n   [133, Chords.SMALL_MAJOR, 0, Timbres.PIANO], [134, Chords.SMALL_MAJOR, 1, Timbres.PIANO],\n   [135, Chords.SMALL_MAJOR, 2, Timbres.PIANO], [136, Chords.SMALL_MAJOR, 3, Timbres.PIANO],\n\n   [137, Chords.SMALL_MINOR, 0, Timbres.PIANO], [138, Chords.SMALL_MINOR, 1, Timbres.PIANO],\n   [139, Chords.SMALL_MINOR, 2, Timbres.PIANO], [140, Chords.SMALL_MINOR, 3, Timbres.PIANO],\n   [141, Chords.SMALL_MINOR, 0, Timbres.PIANO], [142, Chords.SMALL_MINOR, 1, Timbres.PIANO],\n   [143, Chords.SMALL_MINOR, 2, Timbres.PIANO], [144, Chords.SMALL_MINOR, 3, Timbres.PIANO],\n   [145, Chords.SMALL_MINOR, 0, Timbres.PIANO], [146, Chords.SMALL_MINOR, 1, Timbres.PIANO],\n   [147, Chords.SMALL_MINOR, 2, Timbres.PIANO], [148, Chords.SMALL_MINOR, 3, Timbres.PIANO],\n   [149, Chords.SMALL_MINOR, 0, Timbres.PIANO], [150, Chords.SMALL_MINOR, 1, Timbres.PIANO],\n   [151, Chords.SMALL_MINOR, 2, Timbres.PIANO], [152, Chords.SMALL_MINOR, 3, Timbres.PIANO],\n\n   [153, Chords.HALF_DIM, 0, Timbres.PIANO], [154, Chords.HALF_DIM, 1, Timbres.PIANO],\n   [155, Chords.HALF_DIM, 2, Timbres.PIANO], [156, Chords.HALF_DIM, 3, Timbres.PIANO],\n   [157, Chords.HALF_DIM, 0, Timbres.PIANO], [158, Chords.HALF_DIM, 1, Timbres.PIANO],\n   [159, Chords.HALF_DIM, 2, Timbres.PIANO], [160, Chords.HALF_DIM, 3, Timbres.PIANO],\n   [161, Chords.HALF_DIM, 0, Timbres.PIANO], [162, Chords.HALF_DIM, 1, Timbres.PIANO],\n   [163, Chords.HALF_DIM, 2, Timbres.PIANO], [164, Chords.HALF_DIM, 3, Timbres.PIANO],\n   [165, Chords.HALF_DIM, 0, Timbres.PIANO], [166, Chords.HALF_DIM, 1, Timbres.PIANO],\n   [167, Chords.HALF_DIM, 2, Timbres.PIANO], [168, Chords.HALF_DIM, 3, Timbres.PIANO],\n\n   // guitar\n   [169, Chords.BIG_MAJOR, 0, Timbres.GUITAR], [170, Chords.BIG_MAJOR, 1, Timbres.GUITAR],\n   [171, Chords.BIG_MAJOR, 2, Timbres.GUITAR], [172, Chords.BIG_MAJOR, 3, Timbres.GUITAR],\n   [173, Chords.BIG_MAJOR, 0, Timbres.GUITAR], [174, Chords.BIG_MAJOR, 1, Timbres.GUITAR],\n   [175, Chords.BIG_MAJOR, 2, Timbres.GUITAR], [176, Chords.BIG_MAJOR, 3, Timbres.GUITAR],\n   [177, Chords.BIG_MAJOR, 0, Timbres.GUITAR], [178, Chords.BIG_MAJOR, 1, Timbres.GUITAR],\n   [179, Chords.BIG_MAJOR, 2, Timbres.GUITAR], [180, Chords.BIG_MAJOR, 3, Timbres.GUITAR],\n   [181, Chords.BIG_MAJOR, 0, Timbres.GUITAR], [182, Chords.BIG_MAJOR, 1, Timbres.GUITAR],\n   [183, Chords.BIG_MAJOR, 2, Timbres.GUITAR], [184, Chords.BIG_MAJOR, 3, Timbres.GUITAR],\n\n   [185, Chords.SMALL_MAJOR, 0, Timbres.GUITAR], [186, Chords.SMALL_MAJOR, 1, Timbres.GUITAR],\n   [187, Chords.SMALL_MAJOR, 2, Timbres.GUITAR], [188, Chords.SMALL_MAJOR, 3, Timbres.GUITAR],\n   [189, Chords.SMALL_MAJOR, 0, Timbres.GUITAR], [190, Chords.SMALL_MAJOR, 1, Timbres.GUITAR],\n   [191, Chords.SMALL_MAJOR, 2, Timbres.GUITAR], [192, Chords.SMALL_MAJOR, 3, Timbres.GUITAR],\n   [193, Chords.SMALL_MAJOR, 0, Timbres.GUITAR], [194, Chords.SMALL_MAJOR, 1, Timbres.GUITAR],\n   [195, Chords.SMALL_MAJOR, 2, Timbres.GUITAR], [196, Chords.SMALL_MAJOR, 3, Timbres.GUITAR],\n   [197, Chords.SMALL_MAJOR, 0, Timbres.GUITAR], [198, Chords.SMALL_MAJOR, 1, Timbres.GUITAR],\n   [199, Chords.SMALL_MAJOR, 2, Timbres.GUITAR], [200, Chords.SMALL_MAJOR, 3, Timbres.GUITAR],\n\n   [201, Chords.SMALL_MINOR, 0, Timbres.GUITAR], [202, Chords.SMALL_MINOR, 1, Timbres.GUITAR],\n   [203, Chords.SMALL_MINOR, 2, Timbres.GUITAR], [204, Chords.SMALL_MINOR, 3, Timbres.GUITAR],\n   [205, Chords.SMALL_MINOR, 0, Timbres.GUITAR], [206, Chords.SMALL_MINOR, 1, Timbres.GUITAR],\n   [207, Chords.SMALL_MINOR, 2, Timbres.GUITAR], [208, Chords.SMALL_MINOR, 3, Timbres.GUITAR],\n   [209, Chords.SMALL_MINOR, 0, Timbres.GUITAR], [210, Chords.SMALL_MINOR, 1, Timbres.GUITAR],\n   [211, Chords.SMALL_MINOR, 2, Timbres.GUITAR], [212, Chords.SMALL_MINOR, 3, Timbres.GUITAR],\n   [213, Chords.SMALL_MINOR, 0, Timbres.GUITAR], [214, Chords.SMALL_MINOR, 1, Timbres.GUITAR],\n   [215, Chords.SMALL_MINOR, 2, Timbres.GUITAR], [216, Chords.SMALL_MINOR, 3, Timbres.GUITAR],\n\n   [217, Chords.HALF_DIM, 0, Timbres.GUITAR], [218, Chords.HALF_DIM, 1, Timbres.GUITAR],\n   [219, Chords.HALF_DIM, 2, Timbres.GUITAR], [220, Chords.HALF_DIM, 3, Timbres.GUITAR],\n   [221, Chords.HALF_DIM, 0, Timbres.GUITAR], [222, Chords.HALF_DIM, 1, Timbres.GUITAR],\n   [223, Chords.HALF_DIM, 2, Timbres.GUITAR], [224, Chords.HALF_DIM, 3, Timbres.GUITAR],\n   [225, Chords.HALF_DIM, 0, Timbres.GUITAR], [226, Chords.HALF_DIM, 1, Timbres.GUITAR],\n   [227, Chords.HALF_DIM, 2, Timbres.GUITAR], [228, Chords.HALF_DIM, 3, Timbres.GUITAR],\n   [229, Chords.HALF_DIM, 0, Timbres.GUITAR], [230, Chords.HALF_DIM, 1, Timbres.GUITAR],\n   [231, Chords.HALF_DIM, 2, Timbres.GUITAR], [232, Chords.HALF_DIM, 3, Timbres.GUITAR],\n  ],\n];\n\nexport const test_a_indexing = (chord, transposition, timbre) => {\n  let idx = 0;\n  if (timbre === Timbres.PIANO) idx += 0;\n  else if (timbre === Timbres.GUITAR) idx += 16;\n\n  switch (chord) {\n    case Chords.BIG_MAJOR: idx += 0; break;\n    case Chords.SMALL_MAJOR: idx += 4; break;\n    case Chords.SMALL_MINOR: idx += 8; break;\n    case Chords.HALF_DIM: idx += 12; break;\n  }\n\n  return idx + transposition;\n};\n\nexport const test_c_indexing = (chord, transposition, timbre, type) => {\n  /*\n  PIANO>\n    BIG_MAJOR:    0-15\n    SMALL_MAJOR: 16-31\n    SMALL_MINOR: 32-47\n    HALF_DIM:    48-63\n  GUITAR>\n    BIG_MAJOR:   64-79\n    SMALL_MAJOR: 80-95\n    SMALL_MINOR: 96-111\n    HALF_DIM:   112-127  \n  */\n\n  let idx = 0;\n  if (timbre === Timbres.PIANO) idx += 0;\n  else if (timbre === Timbres.GUITAR) idx += 64;\n\n  switch (chord) {\n    case Chords.BIG_MAJOR: idx += 0; break;\n    case Chords.SMALL_MAJOR: idx += 16; break;\n    case Chords.SMALL_MINOR: idx += 32; break;\n    case Chords.HALF_DIM: idx += 48; break;\n  }\n\n  return idx + type*4 + transposition;\n};\n","import React from 'react';\nimport { ReplayButton, ContinueButton, LoadingScreen, ButtonTable, InfoScreen } from '../ui.js';\nimport { Chords, Timbres } from '../defs.js';\nimport { audio_mapping, test_a_indexing, test_c_indexing } from './audio_mapping.js';\nimport ls from 'local-storage';\nimport { repeatArray, randomInt, randomElement, shuffleArray, randomSequence } from '../randomize.js';\nimport { AudioController } from '../audio_controller.js';\n\nconst SubtestInfo = ({test_num, is_free, next}) => {\n  let info;\n  switch (test_num) {\n  case 0:\n    if (is_free) {\n      info = <p>בחלק זה יושמעו אקורדים בודדים. עליכם לזהות את סוג האקורד, וללחוץ עליו במהירות האפשרית. ניתן ללחוץ על לחצן הרמקול בכדי להאזין לאקורד שוב (עד פעמיים נוספות).</p>;\n    }\n    else {\n      info = <p>בחלק זה יושמעו אקורדים בודדים. עליכם לזהות את סוג האקורד, וללחוץ עליו במהירות האפשרית.</p>;\n    }\n    break;\n  case 1:\n    if (is_free) {\n      info = <p>בחלק זה יושמעו קטעים מוזיקליים קצרים מתוך שירים. האקורד אותו עליכם לזהות יהיה האקורד הראשון בכל קטע. הוא ינוגן בשנית בסוף הקטע המוזיקלי. עליכם לזהות אותו וללחוץ על סוג האקורד במהירות האפשרית. ניתן ללחוץ על לחצן הרמקול בכדי להאזין לאקורד שוב (עד פעמיים נוספות).</p>;\n    }\n    else {\n      info = <p>בחלק זה יושמעו קטעים מוזיקליים קצרים מתוך שירים. האקורד אותו עליכם לזהות יהיה האקורד הראשון בכל קטע. הוא ינוגן בשנית בסוף הקטע המוזיקלי. עליכם לזהות אותו וללחוץ על סוג האקורד במהירות האפשרית.</p>;\n    }\n    break;\n  case 2:\n    if (is_free) {\n      info = <p>מיד תשמעו צמדי אקורדים. לפני כל צמד אקורדים תשמעו סולם עולה ויורד (צלילים שמנוגנים בזה אחר זה, בניגוד לאקורדים עצמם, שבהם הצלילים מנוגנים יחד). לאחר מכן, בכל צמד אקורדים שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס. עליכם לזהות את סוג האקורד הראשון שמושמע מתוך הצמד, וללחוץ עליו במהירות האפשרית. ניתן ללחוץ על לחצן הרמקול בכדי להאזין לאקורד שוב (עד פעמיים נוספות).</p>;\n    }\n    else {\n      info = <p>מיד תשמעו צמדי אקורדים. לפני כל צמד אקורדים תשמעו סולם עולה ויורד (צלילים שמנוגנים בזה אחר זה, בניגוד לאקורדים עצמם, שבהם הצלילים מנוגנים יחד). לאחר מכן, בכל צמד אקורדים שתשמעו, האקורד הראשון יהיה האקורד המשמעותי, אליו עליכם להתייחס. עליכם לזהות את סוג האקורד הראשון שמושמע מתוך הצמד, וללחוץ עליו במהירות האפשרית.</p>;\n    }\n    break;\n  }\n\n  const info_div = <div>{info}</div>;\n  return <InfoScreen info={info_div} next={next} />;\n};\n\nclass TestBlock extends React.Component {\n  trial_num = 16\n\n  state = {\n    trial_idx: 0,\n    show_info: true,\n    loading: true,\n    replay_count: 2,\n    is_playing: true,\n  }\n\n  constructor({test_num, test_idx, is_free, chord_button_labels, next, data}) {\n    super();\n    this.test_num = test_num;\n    this.test_idx = test_idx;\n    this.is_free = is_free;\n    this.chord_button_labels = chord_button_labels;\n    this.next = next;\n    this.data = data;\n    this.ls_prefix = \"test_subtests_\" + (is_free ? \"free\" : \"fast\") + \"_testblock\" + test_num + \"_\";\n\n    this.test_data = audio_mapping[test_num];\n\n    const cont_sequence = ls.get(this.ls_prefix + \"sequence\");\n    if (cont_sequence !== null) {\n      this.sequence = cont_sequence;\n\n      const cont_trial_idx = ls.get(this.ls_prefix + \"trial_idx\");\n      if (cont_trial_idx !== null)\n        this.state.trial_idx = cont_trial_idx;\n\n      const cont_show_info = ls.get(this.ls_prefix + \"show_info\");\n      if (cont_show_info !== null)\n        this.state.show_info = cont_show_info;\n    }\n    else {       \n      this.sequence = this.make_test_sequence(test_num);\n      ls.set(this.ls_prefix + \"sequence\", this.sequence);\n      ls.set(this.ls_prefix + \"trial_idx\", this.state.trial_idx);\n      ls.set(this.ls_prefix + \"show_info\", this.state.show_info);\n    }\n\n    console.log(\"Trial sequence:\");\n    console.log(this.sequence);\n\n    const that = this;\n    const doneLoadingAudio = () => {\n      that.setState({loading: false});\n    };\n\n    const donePlaying = () => {\n      that.setState({is_playing: false});\n    };\n\n    this.audioController = new AudioController(this.sequence.map(d => d[0]), doneLoadingAudio, donePlaying);\n\n    //console.log(\"Starting subtest \" + this.test_num + \". sequence:\");\n    //console.log(this.sequence);\n\n    if (!this.state.show_info) {\n      this.audioController.play(this.sequence[this.state.trial_idx][0]);\n      this.response_start = new Date();\n    }\n  }\n\n  make_test_sequence = (test_num) => {\n    switch (test_num) {\n    case 0:\n      return this.make_subtest_a_seq();\n    case 1:\n      return shuffleArray(this.test_data);\n    case 2:       \n      return this.make_subtest_c_seq();\n    default:\n      return null;\n    }\n  }\n  \n  make_subtest_a_seq = () => {\n    let sequence = [];    \n    let timbres = shuffleArray([...repeatArray([Timbres.PIANO], 8), \n                                ...repeatArray([Timbres.GUITAR], 8)]);\n    let cur_timbre = 0;\n    for (let c in Chords) {\n      for (let trnsp=0; trnsp<4; trnsp++) {\n        sequence.push(this.test_data[test_a_indexing(Chords[c], trnsp, timbres[cur_timbre])]);\n        cur_timbre++;\n      }\n    }\n\n    return shuffleArray(sequence);\n  }\n\n  make_subtest_c_seq = () => {\n    let sequence = [];\n    let timbres = shuffleArray([...repeatArray([Timbres.PIANO], 8), \n                                ...repeatArray([Timbres.GUITAR], 8)]);\n    let trnsps = shuffleArray(repeatArray([0,1,2,3], 16));\n    let i = 0;\n\n    for (let c in Chords) {\n      for (let type=0; type<4; type++) {\n        sequence.push(this.test_data[test_c_indexing(Chords[c], trnsps[i], timbres[i], type)]);\n        i++;\n      }\n    }\n    return shuffleArray(sequence);\n  }\n  \n  get_transposition_play_count = () => { \n    const idx = this.state.trial_idx;\n    const trial = this.sequence[idx];\n    return this.sequence.slice(0, idx)\n      .filter(t => t[1] === trial[1] && t[2] === trial[2]).length + 1;\n  }\n\n  startTrials = () => {\n    this.setState({show_info: false});\n    ls.set(this.ls_prefix + \"show_info\", false);\n\n    this.audioController.play(this.sequence[this.state.trial_idx][0]);\n    this.response_start = new Date();\n  }\n\n  nextTrial = () => {\n    const { trial_idx } = this.state;\n\n    this.audioController.stop(this.sequence[trial_idx][0]);\n\n    if (trial_idx + 1 >= this.sequence.length) {\n      this.next();\n    }\n    else {\n      this.setState({trial_idx: trial_idx + 1,\n                     answer_received: false,\n                     replay_count: 2,\n                     is_playing: true});\n      ls.set(this.ls_prefix + \"trial_idx\", trial_idx + 1);\n      ls.set(\"test_data\", this.data);\n\n      this.audioController.play(this.sequence[trial_idx+1][0]);\n      this.response_start = new Date();\n    }\n  }\n\n  processAnswer = (answer) => {\n    const { trial_idx } = this.state;\n\n    // collect data\n    const trial_info = this.sequence[trial_idx];\n    const td = {\n      time: new Date().toString(),\n      subtest: this.test_num + 1,\n      audio_index: trial_info[0],\n      chord_number: this.trial_num * this.test_idx + this.state.trial_idx + 1,\n      chord_type: trial_info[1],\n      transposition: trial_info[2] + 1,\n      transposition_play_count: this.get_transposition_play_count(),\n      timbre: trial_info[3] + 1,\n      is_free: this.is_free ? 1 : 2,\n      selected_chord_type: answer,\n      correct: answer === trial_info[1],\n      response_time: new Date() - this.response_start,\n    };\n\n    this.data.trials.push(td);\n\n    this.setState({answer_received: true,\n                   replay_count: 0});\n  }\n\n  replay = () => {\n    const { trial_idx, replay_count } = this.state;\n    this.setState({replay_count: replay_count-1,\n                   is_playing: true});\n    this.audioController.play(this.sequence[trial_idx][0]);\n  }\n\n  render() {\n    const { trial_idx, show_info, loading, answer_received, is_playing, replay_count } = this.state;\n    if (loading)\n      return <LoadingScreen />;\n    else if (show_info) {\n      return <SubtestInfo test_num={this.test_num} next={this.startTrials} is_free={this.is_free} />;\n    }\n    else {\n      let next_trial_button = null;\n      let replay_button = null;\n      \n      if (answer_received && !is_playing) {\n        next_trial_button = (\n          <div className=\"center-trial-btn\">\n            <ContinueButton next={this.nextTrial} className=\"btn-secondary\"/>\n          </div>\n        );\n      }\n      else if (this.is_free && !answer_received && replay_count > 0 && !is_playing) {\n        replay_button = (\n          <div className=\"center-trial-btn\">\n            <ReplayButton onClick={this.replay} />\n          </div>\n        );\n      }\n            \n      return (\n        <div className=\"container\">\n          <div className=\"row\">          \n            <ButtonTable labels={this.chord_button_labels} values={this.chord_button_labels} next={this.processAnswer} disabled={answer_received} key={trial_idx} />\n          </div>\n          {next_trial_button}\n          {replay_button}\n        </div>\n      );\n    }\n  }\n}\n\nexport class SubtestsBlock extends React.Component {\n  subtests_count = 3;\n\n  state = {\n    test_idx: 0,\n  }\n\n  nextTest = () => {\n    const { test_idx } = this.state;\n    if (test_idx + 1 >= this.subtests_count) \n      this.next();\n    else {\n      this.setState({ test_idx: test_idx + 1 });\n      ls.set(this.ls_prefix + \"test_idx\", test_idx + 1);\n    }\n  }\n\n  constructor({data, next, is_free, button_labels}) {\n    super();\n    this.data = data;\n    this.next = next;\n    this.is_free = is_free;\n    this.chord_button_labels = button_labels;\n    this.ls_prefix = \"test_subtests_\" + (is_free ? \"free_\" : \"fast_\");\n\n    const cont_test_order = ls.get(this.ls_prefix + \"test_order\");\n    if (cont_test_order !== null) {\n      this.test_order = cont_test_order;\n      \n      const cont_test_idx = ls.get(this.ls_prefix + \"test_idx\");\n      if (cont_test_idx) this.state.test_idx = cont_test_idx;\n    }\n    else {\n      this.test_order = shuffleArray([0, 1, 2]);\n\n      ls.set(this.ls_prefix + \"test_order\", this.test_order);\n      ls.set(this.ls_prefix + \"test_idx\", this.state.test_idx);\n    }\n\n    console.log(\"Test order: \" + this.test_order);    \n  }\n\n  render() {\n    const { test_idx } = this.state;\n    const test_num = this.test_order[test_idx];\n    \n    return <TestBlock test_num={test_num} test_idx={test_idx} is_free={this.is_free}\n                      chord_button_labels={this.chord_button_labels} \n                      next={this.nextTest} \n                      data={this.data}\n                      key={test_num} />;\n  }\n}\n","import React from 'react';\nimport { ComboBox, ContinueButton } from '../ui.js';\nimport ls from 'local-storage';\n\nexport class PersonalInfoScreen extends React.Component {\n  constructor({data, next, songsQuestionnaire}) {\n    super();\n    this.data = data;\n    this.next = next;\n    this.songsQuestionnaire = songsQuestionnaire;\n  }\n\n  saveData = () => {\n    const age = document.getElementById('age').value;\n    if (!/^(0|[1-9]\\d*)$/.test(age)) {\n      alert(\"ערך הגיל שהכנסתם אינו חוקי.\");\n      return;\n    }\n\n    const gender = document.getElementById('gender').value;\n    const musical_background = document.getElementById('musical_background').value;\n    const residence = document.getElementById('residence').value;\n    const education = document.getElementById('education').value;\n\n    const big_maj_recognition = document.getElementById('big_maj_recognition').value;\n    const small_maj_recognition = document.getElementById('small_maj_recognition').value;\n    const small_min_recognition = document.getElementById('small_min_recognition').value;\n    const half_dim_recognition = document.getElementById('half_dim_recognition').value;\n    const hwcomputer = document.getElementById('hwcomputer').value;\n    const hwdisplay = document.getElementById('hwdisplay').value;\n    const hwmouse = document.getElementById('hwmouse').value;\n    const hwheadphones = document.getElementById('hwheadphones').value;\n    if (big_maj_recognition.length===0 || small_maj_recognition.length===0 ||\n        small_min_recognition.length===0 || half_dim_recognition.length===0 ||\n        hwcomputer.length===0 || hwdisplay.length===0 || \n        hwmouse.length===0 || hwheadphones.length===0 ||\n        education===\"-\" || residence===\"-\" || musical_background===\"-\" ||\n        gender===\"-\") {\n      alert(\"אנא ענו על כל השאלות.\");\n      return;\n    }\n\n    let form_data = {\n      time: new Date().toString(),\n      subtest: 5,\n      age: age,\n      gender: gender,\n      musical_background: musical_background,\n      residence: residence,\n      education: education,\n      big_maj_recognition: big_maj_recognition,\n      small_maj_recognition: small_maj_recognition,\n      small_min_recognition: small_min_recognition,\n      half_dim_recognition: half_dim_recognition,\n      computer: hwcomputer,\n      display: hwdisplay,\n      mouse: hwmouse,\n      headphones: hwheadphones,\n    };\n\n    if (this.songsQuestionnaire) {\n      const imagine_familiarity = document.getElementById('imagine_familiarity').value;\n      const imagine_like = document.getElementById('imagine_like').value;\n      const caesaria_familiarity = document.getElementById('caesaria_familiarity').value;\n      const caesaria_like = document.getElementById('caesaria_like').value;\n      const rocketman_familiarity = document.getElementById('rocketman_familiarity').value;\n      const rocketman_like = document.getElementById('rocketman_like').value;\n      const britolam_familiarity = document.getElementById('britolam_familiarity').value;\n      const britolam_like = document.getElementById('britolam_like').value;\n\n      if (imagine_familiarity===\"-\" || imagine_like===\"-\" || \n          caesaria_familiarity===\"-\" || caesaria_like===\"-\" ||\n          rocketman_familiarity===\"-\" || rocketman_like===\"-\" ||\n          britolam_familiarity===\"-\" || britolam_like===\"-\") {\n        alert(\"אנא ענו על כל השאלות.\");\n        return;\n      }\n\n      form_data.imagine_familiarity = imagine_familiarity;\n      form_data.imagine_like = imagine_like;\n      form_data.caesaria_familiarity = caesaria_familiarity;\n      form_data.caesaria_like = caesaria_like;\n      form_data.rocketman_familiarity = rocketman_familiarity;\n      form_data.rocketman_like = rocketman_like;\n      form_data.britolam_familiarity = britolam_familiarity;\n      form_data.britolam_like = britolam_like;\n    }\n\n    this.data.trials.push(form_data);\n\n\n    ls.set(\"test_data\", this.data);\n    this.next();\n  }\n\n  render() { \n    let songsForm = null;\n    if (this.songsQuestionnaire) {\n      const numbered_options = [...Array(7).keys()].map(i => i+1);\n\n      songsForm = (\n        <div className=\"songs_form\">\n          <p style={{fontWeight: 'bold'}}>שאלון שירים:</p>\n          <p>אנא ענה על השאלות הבאות בציון של 1-7, כאשר 1 הוא מעט ו-7 הרבה.</p>\n          <label htmlFor=\"imagine_familiarity\">מה רמת ההיכרות שלך עם השיר \"imagine\" של ג'ון לנון?</label>\n          <ComboBox id=\"imagine_familiarity\" options={numbered_options}/>\n          <br/>\n          <label htmlFor=\"imagine_like\">מה רמת החיבה שלך לשיר זה?</label>\n          <ComboBox id=\"imagine_like\" options={numbered_options}/>\n          <br/>\n          <br/>\n          <label htmlFor=\"caesaria_familiarity\">מה רמת ההיכרות שלך עם השיר \"הליכה לקיסריה (אלי אלי)\" של חנה סנש ודוד זהבי?</label>\n          <ComboBox id=\"caesaria_familiarity\" options={numbered_options}/>\n          <br/>\n          <label htmlFor=\"caesaria_like\">מה רמת החיבה שלך לשיר זה?</label>\n          <ComboBox id=\"caesaria_like\" options={numbered_options}/>\n          <br/>\n          <br/>\n          <label htmlFor=\"rocketman_familiarity\">מה רמת ההיכרות שלך עם השיר \"Rocket Man\" של אלטון ג'ון?</label>\n          <ComboBox id=\"rocketman_familiarity\" options={numbered_options}/>\n          <br/>\n          <label htmlFor=\"rocketman_like\">מה רמת החיבה שלך לשיר זה?</label>\n          <ComboBox id=\"rocketman_like\" options={numbered_options}/>\n          <br/>\n          <br/>\n          <label htmlFor=\"britolam_familiarity\">מה רמת ההיכרות שלך עם השיר \"ברית עולם\" של אהוד מנור ומתי כספי?</label>\n          <ComboBox id=\"britolam_familiarity\" options={numbered_options}/>\n          <br/>\n          <label htmlFor=\"britolam_like\">מה רמת החיבה שלך לשיר זה?</label>\n          <ComboBox id=\"britolam_like\" options={numbered_options}/>\n          <br/>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-8 offset-sm-2 personal-info-form\">\n            <p style={{fontWeight: 'bold'}}>שאלון פרטים אישיים:</p>\n            <label htmlFor=\"age\">גיל:</label>\n            <input type=\"text\" id=\"age\" name=\"age\" maxLength=\"2\"/>\n            <br/>\n            <label htmlFor=\"gender\">מין:</label>\n            <select id=\"gender\" name=\"gender\" defaultValue=\"-\">\n              <option hidden disabled value=\"-\"></option>\n              <option value=\"1\">נקבה</option>\n              <option value=\"2\">זכר</option>\n              <option value=\"3\">אחר</option>\n            </select>\n            <br/>\n            <label htmlFor=\"musical_background\">רקע מוזיקלי מוקדם:</label>\n            <select id=\"musical_background\" name=\"musical_background\" defaultValue=\"-\">\n              <option hidden disabled value=\"-\"></option>\n              <option value=\"1\">אין</option>\n              <option value=\"2\">ניגנתי פחות משנה</option>\n              <option value=\"3\">ניגנתי פחות משנתיים</option>\n            </select>\n            <br/>\n            <label htmlFor=\"residence\">איזור מגורים:</label>\n            <select id=\"residence\" name=\"residence\" defaultValue=\"-\">\n              <option hidden disabled value=\"-\"></option>\n              <option value=\"1\">מרכז הארץ</option>\n              <option value=\"2\">צפון הארץ</option>\n              <option value=\"3\">דרום הארץ</option>\n              <option value=\"4\">ירושלים</option>\n              <option value=\"5\">שפלה</option>\n            </select>\n            <br/>\n            <label htmlFor=\"education\">השכלה:</label>\n            <select id=\"education\" name=\"education\" defaultValue=\"-\">\n              <option hidden disabled value=\"-\"></option>\n              <option value=\"1\">תיכון</option>\n              <option value=\"2\">תואר ראשון</option>\n              <option value=\"3\">תואר שני</option>\n              <option value=\"4\">תואר שלישי</option>\n              <option value=\"5\">לימודי תעודה</option>\n            </select>\n            <br/>\n            <label htmlFor=\"big_maj_recognition\">על סמך מה זיהית את אקורד \"מז'ור גדול\"?</label>\n            <textarea id=\"big_maj_recognition\" rows=\"2\" cols=\"50\"/>\n            <label htmlFor=\"small_maj_recognition\">על סמך מה זיהית את אקורד \"מז'ור קטן\"?</label>\n            <textarea id=\"small_maj_recognition\" rows=\"2\" cols=\"50\"/>\n            <label htmlFor=\"small_min_recognition\">על סמך מה זיהית את אקורד \"מינור קטן\"?</label>\n            <textarea id=\"small_min_recognition\" rows=\"2\" cols=\"50\"/>\n            <label htmlFor=\"half_dim_recognition\">על סמך מה זיהית את אקורד \"חצי מוקטן\"?</label>\n            <textarea id=\"half_dim_recognition\" rows=\"2\" cols=\"50\"/>            \n            <p>אנא מלאו את הפרטים של החומרה בה השתמשתם בתרגול ובמבחן. אנא פרטו את הדגם המדויק בכל אחד מן הסעיפים.</p>\n            <label htmlFor=\"hwcomputer\">מחשב:</label><br/>\n            <textarea id=\"hwcomputer\" rows=\"2\" cols=\"50\"/><br/>\n            <label htmlFor=\"display\">מסך מחשב:</label><br/>\n            <textarea id=\"hwdisplay\" rows=\"2\" cols=\"50\"/><br/>\n            <label htmlFor=\"hwmouse\">עכבר:</label><br/>\n            <textarea id=\"hwmouse\" rows=\"2\" cols=\"50\"/><br/>\n            <label htmlFor=\"hwheadphones\">אוזניות:</label><br/>\n            <textarea id=\"hwheadphones\" rows=\"2\" cols=\"50\"/><br/>\n            <br/>\n\n            {songsForm}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-8 offset-sm-2 text-center\">\n            <ContinueButton next={this.saveData} />\n          </div>\n        </div>\n        <div className=\"row\">&nbsp;</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport '../Experiment.css';\nimport './TestExperiment.css';\nimport { InfoScreen, ContinueButton, ErrorScreen, LoadingScreen } from '../ui.js';\nimport { LessonType, LessonTypeNumbering, Chords } from '../defs.js';\nimport { PretestBlock } from './pretest.js';\nimport { SubtestsBlock } from './subtests.js';\nimport { PersonalInfoScreen } from './personal_info.js';\nimport ls from 'local-storage';\nimport { read_subject_data, does_user_sheet_exists } from '../sessions.js';\nimport gs from '../spreadsheet_io.js';\nimport { shuffleArray } from '../randomize.js';\n\nconst LoginScreen = ({next, data}) => {\n  const handleContinue = () => {\n    data.id = document.getElementById('id_input').value;\n    next();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 infotext\">\n          <p>לפניכם מבחן של כ-30 דקות.</p>\n          <p>לא ניתן לצאת במהלכו.</p>\n          <p>המבחן מחייב חיבור אינטרנטי. עבודה ללא חיבור אינטרנטי תיפסל מהניסוי.</p>\n          <p>כמו כן, אנא הצטיידו באוזניות, לאחר שווידאתם עם הנסיינית (יעל) שהן איכותיות מספיק.</p>\n          <p>בכדי להיכנס לתוכנת המבחן, נא להכניס את מספר תעודת הזהות שלכם, וללחוץ על \"המשך\".</p>          \n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col text-center\">\n          <br/>\n          <label>ת\"ז: <input type=\"text\" id=\"id_input\"/><br/></label>\n          <p hidden>\"</p>\n          <br/>\n          <ContinueButton next={handleContinue} disabled={false} />            \n        </div>\n        <div className=\"col\"></div>\n      </div>      \n    </div>\n  );\n};\n\nconst FinishScreen = ({data, done_saving}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-8 offset-md-2 finish-screen text-center\">\n        <h1>תודה רבה!</h1>\n        <p>{done_saving ? \"הנתונים נשמרו בהצלחה!\" : \"אנא המתן לשמירת הנתונים...\"}</p>\n      </div>\n    </div>\n  );\n};\n\nconst TestInfo = () => {\n  return (\n    <div>\n      <p>מיד תעברו למסך ובו ארבעה סוגי אקורדים: מז'ור גדול, מז'ור קטן, מינור קטן, וחצי מוקטן.</p>\n      <p>תחילה, תתבקשו לבצע ניסוי ללא קול: במרכז המסך יופיע אחד מסוגי האקורדים, ועליכם ללחוץ על סוג האקורד הזהה שבעיגול המקיף אותו.</p>\n      <p>לאחר מספר ניסיונות ללא קול, תעברו לשמיעת האקורדים.</p>\n      <p>לפני ההשמעה עליכם לכוון את העכבר לסימן הפלוס שבאמצע המסך. יהיה עליכם לזהות את האקורד כמה שיותר מהר אך מבלי לוותר על דיוק. יהיה ניתן לשמוע את האקורד פעם אחת בלבד.</p>\n      <p>ברגע הזיהוי יש ללחוץ על סוג האקורד במהירות האפשרית.</p>\n      <p>בהצלחה!</p>\n    </div>\n  );\n};\n\nclass TestExperiment extends React.Component {\n  conn = { // read/write connection details for google spreadsheet.\n    spreadsheet_id: '1D2s3D13ldvchzueCFWTkvH8kzhNBEMZzizPnjGQnhMY',\n    api_key: 'AIzaSyDHFHbGy_GhEt1Q4FW61YYEX2jk3hZcSoQ',\n    write_url: 'https://script.google.com/macros/s/AKfycbxv6Uc9VsHlKI6SMe6YmH-MELryrJYvYg-uQnGFhyMF2X7zyC-O/exec',\n  }\n\n  ls_prefix = \"test_\";\n  sheet_suffix = \"-test\";\n\n  steps = {\n    LOGIN: 1,\n    INFO: 2,\n    PRETEST: 3,\n    SUB_TESTS_FREE: 4,\n    SUB_TESTS_FAST: 5,\n    PERSONAL_INFO: 6,\n    FINISH: 7,\n  }\n\n  state = {\n    step: 1,\n    error: null,\n    loading: false,\n  }\n\n  data = {\n    id: undefined,\n    trials: [],\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    const new_step = step + 1;\n\n    if (step > 1)\n      ls.set(this.ls_prefix + \"step\", new_step);\n\n    const altered_step = this.stepWillChange(step, new_step);\n    this.setState({step: altered_step || new_step});\n    this.stepChanged(altered_step || new_step);\n  }\n\n  stepWillChange = (step, new_step) => {\n    if (step === this.steps.LOGIN) {\n      this.setState({loading: true});\n      does_user_sheet_exists(this.conn, this.data.id + this.sheet_suffix)\n        .then(sheet_exists => {\n          if (sheet_exists) {\n            ls.set(this.ls_prefix + \"data\", this.data);\n            read_subject_data(this.conn, this.data.id)\n              .then(subject_data => {\n                if (subject_data) {\n                  this.lesson_type = subject_data.lesson_type;\n                  this.chord_button_labels = subject_data.chord_button_labels;\n                  this.setState({loading: false});\n                }\n                else {\n                  this.setState({error: \"לא ניתן לקרוא נתונים עבור נבדק \" + this.data.id + \".\"});\n                }\n              })\n              .catch(err => {\n                this.setState({error: \"לא ניתן להתחבר. בדקו את חיבור האינטרנט ונסו שוב. \" + err});\n              });\n          }\n          else {\n            this.setState({error: \"גיליון מבחן עבור נבדק \" + this.data.id + \" לא קיים במערכת.\",\n                           loading: false});\n          }\n\n        })\n        .catch(err => {\n          this.setState({error: \"לא ניתן להתחבר. בדקו את חיבור האינטרנט ונסו שוב. \" + err});\n        });\n\n      // try to recover from local storage\n      const cont_data = ls.get(this.ls_prefix + \"data\");\n      if (cont_data && cont_data.id === this.data.id) {\n        console.log(\"Loading from local storage...\");\n        \n        this.data = cont_data;\n        \n        const cont_step = ls.get(this.ls_prefix + \"step\");\n        if (cont_step) \n          return cont_step;\n      }\n      else {\n        console.log(\"clearing local storage\");\n        ls.clear();\n      }\n    }\n\n    return undefined;\n  }\n\n  stepChanged = (step) => {\n    if (step === this.steps.FINISH) {\n      this.data.end_time = new Date().toString();\n      console.log(\"Saving data...\");\n      console.log(this.data.trials);\n\n      this.data.trials.forEach(t => {\n        t.id = this.data.id;\n        t.start_time = this.data.start_time;\n        t.end_time = this.data.end_time;\n        t.strategy = LessonTypeNumbering[this.lesson_type];\n      });\n      \n      const that = this;\n      gs.write(this.conn, \"\" + this.data.id + this.sheet_suffix, this.data.trials)\n        .then(res => { \n          that.setState({done_saving: true});\n          ls.clear(); \n        })\n        .catch(this.dataSaveError);\n    }\n  }\n\n  dataSaveError(response) {\n    alert(\"Error while saving data: \" + response);\n  }\n\n  componentDidMount() {\n    this.data.start_time = new Date().toString();\n  }\n\n  render() {\n    const {step} = this.state;\n\n    if (this.state.error) {\n      return <ErrorScreen error={this.state.error} />;\n    } \n    else if (this.state.loading) {\n      return <LoadingScreen />;\n    } \n    else {\n      switch(step) {\n      case this.steps.LOGIN: \n        return <LoginScreen next={this.nextStep} data={this.data} key={step}/>;\n      case this.steps.INFO:\n        const test_info = <TestInfo />;\n        return <InfoScreen info={test_info} next={this.nextStep} key={step}/>;\n      case this.steps.PRETEST:\n        return <PretestBlock next={this.nextStep} button_labels={this.chord_button_labels} data={this.data} key={step}/>;\n      case this.steps.SUB_TESTS_FREE:\n        return <SubtestsBlock next={this.nextStep} data={this.data} button_labels={this.chord_button_labels} is_free={true} key={step} />;\n      case this.steps.SUB_TESTS_FAST:\n        return <SubtestsBlock next={this.nextStep} data={this.data} button_labels={this.chord_button_labels} is_free={false} key={step} />;\n      case this.steps.PERSONAL_INFO:\n        return <PersonalInfoScreen next={this.nextStep} data={this.data} key={step} songsQuestionnaire={this.lesson_type==LessonType.MUSICAL_PIECES}/>;\n      case this.steps.FINISH:\n        return <FinishScreen done_saving={this.state.done_saving} key={step} />;\n      default:\n        return <div>???</div>;\n      }\n    }\n  }\n}\n\nexport default TestExperiment;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TrainingExperiment from './training_experiment/TrainingExperiment.js';\nimport TestExperiment from './test_experiment/TestExperiment.js';\nimport * as serviceWorker from './serviceWorker';\nimport { Switch, HashRouter, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\"><TrainingExperiment/></Route>\n          <Route path=\"/test\"><TestExperiment/></Route>\n          <Route>הכתובת לא קיימת!</Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}